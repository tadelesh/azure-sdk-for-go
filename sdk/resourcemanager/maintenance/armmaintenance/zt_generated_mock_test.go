//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armmaintenance_test

import (
	"context"
	"fmt"
	"net/http"
	"os"
	"runtime/debug"
	"testing"

	"encoding/json"
	"reflect"
	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/maintenance/armmaintenance"
	"golang.org/x/net/http2"
)

var (
	ctx      context.Context
	options  arm.ClientOptions
	cred     azcore.TokenCredential
	err      error
	mockHost string
)

func TestPublicMaintenanceConfigurations_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/PublicMaintenanceConfigurations_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"PublicMaintenanceConfigurations_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewPublicMaintenanceConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List(nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/PublicMaintenanceConfigurations_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListMaintenanceConfigurationsResult{
			Value: []*armmaintenance.Configuration{
				{
					Name:     to.Ptr("configuration1"),
					ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/configuration1"),
					Location: to.Ptr("westus2"),
					Properties: &armmaintenance.ConfigurationProperties{
						MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeSQLDB),
						MaintenanceWindow: &armmaintenance.Window{
							Duration:           to.Ptr("05:00:00"),
							ExpirationDateTime: to.Ptr("9999-12-31 00:00:00"),
							RecurEvery:         to.Ptr("Week Saturday,Sunday"),
							StartDateTime:      to.Ptr("2020-04-30 08:00:00"),
							TimeZone:           to.Ptr("Pacific Standard Time"),
						},
						Namespace:  to.Ptr("Microsoft.Maintenance"),
						Visibility: to.Ptr(armmaintenance.VisibilityPublic),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListMaintenanceConfigurationsResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListMaintenanceConfigurationsResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/PublicMaintenanceConfigurations_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestPublicMaintenanceConfigurations_Get(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/PublicMaintenanceConfigurations_GetForResource.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"PublicMaintenanceConfigurations_GetForResource"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewPublicMaintenanceConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.Get(ctx,
		"configuration1",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/PublicMaintenanceConfigurations_GetForResource.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.Configuration{
			Name:     to.Ptr("configuration1"),
			ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/configuration1"),
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeSQLDB),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("2Weeks"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityPublic),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.Configuration) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.Configuration)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/PublicMaintenanceConfigurations_GetForResource.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestApplyUpdates_GetParent(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_GetParent.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ApplyUpdates_GetParent"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewApplyUpdatesClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.GetParent(ctx,
		"examplerg",
		"virtualMachineScaleSets",
		"smdtest1",
		"Microsoft.Compute",
		"virtualMachines",
		"smdvm1",
		"e9b9685d-78e4-44c4-a81c-64a14f9b87b6",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_GetParent.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ApplyUpdate{
			Name: to.Ptr("e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Type: to.Ptr("Microsoft.Maintenance/applyUpdates"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1/providers/Microsoft.Maintenance/applyUpdates/e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Properties: &armmaintenance.ApplyUpdateProperties{
				ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1"),
				Status:     to.Ptr(armmaintenance.UpdateStatusCompleted),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ApplyUpdate) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ApplyUpdate)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_GetParent.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestApplyUpdates_Get(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_Get.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ApplyUpdates_Get"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewApplyUpdatesClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.Get(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"e9b9685d-78e4-44c4-a81c-64a14f9b87b6",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_Get.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ApplyUpdate{
			Name: to.Ptr("e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Type: to.Ptr("Microsoft.Maintenance/applyUpdates"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/applyUpdates/e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Properties: &armmaintenance.ApplyUpdateProperties{
				ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
				Status:     to.Ptr(armmaintenance.UpdateStatusCompleted),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ApplyUpdate) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ApplyUpdate)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_Get.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestApplyUpdates_CreateOrUpdateParent(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_CreateOrUpdateParent.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ApplyUpdates_CreateOrUpdateParent"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewApplyUpdatesClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.CreateOrUpdateParent(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"virtualMachines",
		"smdvm1",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_CreateOrUpdateParent.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ApplyUpdate{
			Name: to.Ptr("e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Type: to.Ptr("Microsoft.Maintenance/applyUpdates"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1/providers/Microsoft.Maintenance/applyUpdates/e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Properties: &armmaintenance.ApplyUpdateProperties{
				ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1"),
				Status:     to.Ptr(armmaintenance.UpdateStatusPending),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ApplyUpdate) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ApplyUpdate)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_CreateOrUpdateParent.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestApplyUpdates_CreateOrUpdate(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_CreateOrUpdate.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ApplyUpdates_CreateOrUpdate"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewApplyUpdatesClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.CreateOrUpdate(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_CreateOrUpdate.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ApplyUpdate{
			Name: to.Ptr("e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Type: to.Ptr("Microsoft.Maintenance/applyUpdates"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/applyUpdates/e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
			Properties: &armmaintenance.ApplyUpdateProperties{
				ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
				Status:     to.Ptr(armmaintenance.UpdateStatusPending),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ApplyUpdate) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ApplyUpdate)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_CreateOrUpdate.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestApplyUpdates_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ApplyUpdates_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewApplyUpdatesClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List(nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListApplyUpdate{
			Value: []*armmaintenance.ApplyUpdate{
				{
					Name: to.Ptr("e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
					Type: to.Ptr("Microsoft.Maintenance/applyUpdates"),
					ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/applyUpdates/e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
					Properties: &armmaintenance.ApplyUpdateProperties{
						ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
						Status:     to.Ptr(armmaintenance.UpdateStatusCompleted),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListApplyUpdate) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListApplyUpdate)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdates_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_GetParent(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_GetParent.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_GetParent"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.GetParent(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"virtualMachines",
		"smdvm1",
		"workervmPolicy",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_GetParent.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ConfigurationAssignment{
			Name: to.Ptr("workervmPolicy"),
			Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1/providers/Microsoft.Maintenance/configurationAssignments/workervmPolicy"),
			Properties: &armmaintenance.ConfigurationAssignmentProperties{
				MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/policy1"),
				ResourceID:                 to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1"),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ConfigurationAssignment) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ConfigurationAssignment)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_GetParent.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_CreateOrUpdateParent(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_CreateOrUpdateParent.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_CreateOrUpdateParent"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.CreateOrUpdateParent(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"virtualMachines",
		"smdvm1",
		"workervmPolicy",
		armmaintenance.ConfigurationAssignment{
			Properties: &armmaintenance.ConfigurationAssignmentProperties{
				MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/policy1"),
			},
		},
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_CreateOrUpdateParent.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ConfigurationAssignment{
			Name: to.Ptr("workervmPolicy"),
			Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1/providers/Microsoft.Maintenance/configurationAssignments/workervmPolicy"),
			Properties: &armmaintenance.ConfigurationAssignmentProperties{
				MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/policy1"),
				ResourceID:                 to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdvm1"),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ConfigurationAssignment) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ConfigurationAssignment)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_CreateOrUpdateParent.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_DeleteParent(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_DeleteParent.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_DeleteParent"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.DeleteParent(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"virtualMachines",
		"smdvm1",
		"workervmConfiguration",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_DeleteParent.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ConfigurationAssignment{
			Name: to.Ptr("workervmConfiguration"),
			Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/configurationAssignments/workervmConfiguration"),
		}
		if !reflect.DeepEqual(exampleRes, res.ConfigurationAssignment) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ConfigurationAssignment)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_DeleteParent.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_Get(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_Get.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_Get"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.Get(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"workervmConfiguration",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_Get.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ConfigurationAssignment{
			Name: to.Ptr("workervmConfiguration"),
			Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/configurationAssignments/workervmConfiguration"),
			Properties: &armmaintenance.ConfigurationAssignmentProperties{
				MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
				ResourceID:                 to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ConfigurationAssignment) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ConfigurationAssignment)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_Get.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_CreateOrUpdate(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_CreateOrUpdate.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_CreateOrUpdate"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.CreateOrUpdate(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"workervmConfiguration",
		armmaintenance.ConfigurationAssignment{
			Properties: &armmaintenance.ConfigurationAssignmentProperties{
				MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
			},
		},
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_CreateOrUpdate.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ConfigurationAssignment{
			Name: to.Ptr("workervmConfiguration"),
			Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/configurationAssignments/workervmConfiguration"),
			Properties: &armmaintenance.ConfigurationAssignmentProperties{
				MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
				ResourceID:                 to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.ConfigurationAssignment) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ConfigurationAssignment)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_CreateOrUpdate.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_Delete(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_Delete.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_Delete"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.Delete(ctx,
		"examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"workervmConfiguration",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_Delete.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.ConfigurationAssignment{
			Name: to.Ptr("workervmConfiguration"),
			Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
			ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/configurationAssignments/workervmConfiguration"),
		}
		if !reflect.DeepEqual(exampleRes, res.ConfigurationAssignment) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.ConfigurationAssignment)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_Delete.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_ListParent(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_ListParent.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_ListParent"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.ListParent("examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"virtualMachines",
		"smdtestvm1",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_ListParent.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListConfigurationAssignmentsResult{
			Value: []*armmaintenance.ConfigurationAssignment{
				{
					Name: to.Ptr("workervmPolicy"),
					Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
					ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdtestvm1/providers/Microsoft.Maintenance/configurationAssignments/workervmPolicy"),
					Properties: &armmaintenance.ConfigurationAssignmentProperties{
						MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/policy1"),
						ResourceID:                 to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/smdtestvm1"),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListConfigurationAssignmentsResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListConfigurationAssignmentsResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_ListParent.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignments_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignments_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List("examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListConfigurationAssignmentsResult{
			Value: []*armmaintenance.ConfigurationAssignment{
				{
					Name: to.Ptr("workervmConfiguration"),
					Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
					ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/configurationAssignments/workervmConfiguration"),
					Properties: &armmaintenance.ConfigurationAssignmentProperties{
						MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
						ResourceID:                 to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListConfigurationAssignmentsResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListConfigurationAssignmentsResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignments_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestMaintenanceConfigurations_Get(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurations_GetForResource"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.Get(ctx,
		"examplerg",
		"configuration1",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.Configuration{
			Name:     to.Ptr("configuration1"),
			ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeOSImage),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("5Days"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityCustom),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.Configuration) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.Configuration)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}

	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource_GuestOSPatchLinux.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurations_GetForResource_GuestOSPatchLinux"},
	})
	client = armmaintenance.NewConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err = client.Get(ctx,
		"examplerg",
		"configuration1",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource_GuestOSPatchLinux.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.Configuration{
			Name:     to.Ptr("configuration1"),
			ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				InstallPatches: &armmaintenance.InputPatchConfiguration{
					LinuxParameters: &armmaintenance.InputLinuxParameters{
						ClassificationsToInclude: []*string{
							to.Ptr("Critical")},
						PackageNameMasksToExclude: []*string{
							to.Ptr("apt"),
							to.Ptr("http")},
						PackageNameMasksToInclude: []*string{
							to.Ptr("binutils"),
							to.Ptr("bin")},
					},
					RebootSetting: to.Ptr(armmaintenance.RebootOptionsAlways),
					Tasks: &armmaintenance.SoftwareUpdateConfigurationTasks{
						PostTasks: []*armmaintenance.TaskProperties{
							{
								Source:    to.Ptr("/subscriptions/42c974dd-2c03-4f1b-96ad-b07f050aaa74/resourcegroups/akkubdev/providers/Microsoft.Logic/workflows/TestLogicAppMRP"),
								TaskScope: to.Ptr(armmaintenance.TaskScopeResource),
							}},
						PreTasks: []*armmaintenance.TaskProperties{
							{
								Parameters: map[string]*string{
									"COMPUTERNAME": to.Ptr("Computer1"),
								},
								Source:    to.Ptr("/subscriptions/42c974dd-2c03-4f1b-96ad-b07f050aaa74/resourceGroups/functionstest/providers/Microsoft.Web/sites/aktestfunction/functions/HttpTrigger1"),
								TaskScope: to.Ptr(armmaintenance.TaskScopeGlobal),
							}},
					},
				},
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeInGuestPatch),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("5Days"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityCustom),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.Configuration) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.Configuration)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource_GuestOSPatchLinux.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}

	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource_GuestOSPatchWindows.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurations_GetForResource_GuestOSPatchWindows"},
	})
	client = armmaintenance.NewConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err = client.Get(ctx,
		"examplerg",
		"configuration1",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource_GuestOSPatchWindows.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.Configuration{
			Name:     to.Ptr("configuration1"),
			ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				InstallPatches: &armmaintenance.InputPatchConfiguration{
					RebootSetting: to.Ptr(armmaintenance.RebootOptionsAlways),
					Tasks: &armmaintenance.SoftwareUpdateConfigurationTasks{
						PostTasks: []*armmaintenance.TaskProperties{
							{
								Source:    to.Ptr("/subscriptions/d4f9cd36-372e-40bc-b858-4750816d6075/resourceGroups/AlertingWorkflows/providers/Microsoft.Automation/automationAccounts/azdeployer/runbooks/AzureAutomationTutorialPython2"),
								TaskScope: to.Ptr(armmaintenance.TaskScopeGlobal),
							}},
						PreTasks: []*armmaintenance.TaskProperties{
							{
								Parameters: map[string]*string{
									"COMPUTERNAME": to.Ptr("Computer1"),
								},
								Source:    to.Ptr("/subscriptions/d4f9cd36-372e-40bc-b858-4750816d6075/resourceGroups/AlertingWorkflows/providers/Microsoft.Automation/automationAccounts/azdeployer/runbooks/AzureAutomationTutorialPython2"),
								TaskScope: to.Ptr(armmaintenance.TaskScopeResource),
							}},
					},
					WindowsParameters: &armmaintenance.InputWindowsParameters{
						ClassificationsToInclude: []*string{
							to.Ptr("Security")},
						ExcludeKbsRequiringReboot: to.Ptr(false),
						KbNumbersToExclude: []*string{
							to.Ptr("KB234567")},
						KbNumbersToInclude: []*string{
							to.Ptr("KB123456")},
					},
				},
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeInGuestPatch),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("5Days"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityCustom),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.Configuration) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.Configuration)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_GetForResource_GuestOSPatchWindows.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestMaintenanceConfigurations_CreateOrUpdate(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_CreateOrUpdateForResource.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurations_CreateOrUpdateForResource"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.CreateOrUpdate(ctx,
		"examplerg",
		"configuration1",
		armmaintenance.Configuration{
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeOSImage),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("Day"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityCustom),
			},
		},
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_CreateOrUpdateForResource.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.Configuration{
			Name:     to.Ptr("configuration1"),
			ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeOSImage),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("Day"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityCustom),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.Configuration) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.Configuration)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_CreateOrUpdateForResource.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestMaintenanceConfigurations_Delete(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_DeleteForResource.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurations_DeleteForResource"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.Delete(ctx,
		"examplerg",
		"example1",
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_DeleteForResource.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.Configuration{
			Name:     to.Ptr("configuration1"),
			ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				Namespace: to.Ptr("Microsoft.Maintenance"),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.Configuration) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.Configuration)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_DeleteForResource.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestMaintenanceConfigurations_Update(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_UpdateForResource.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurations_UpdateForResource"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	res, err := client.Update(ctx,
		"examplerg",
		"configuration1",
		armmaintenance.Configuration{
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeOSImage),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("Month Third Sunday"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityCustom),
			},
		},
		nil)
	if err != nil {
		t.Fatalf("Failed to get result for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_UpdateForResource.json: %v", err)
	}
	// Response check
	{
		exampleRes := armmaintenance.Configuration{
			Name:     to.Ptr("configuration1"),
			ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
			Location: to.Ptr("westus2"),
			Properties: &armmaintenance.ConfigurationProperties{
				MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeOSImage),
				MaintenanceWindow: &armmaintenance.Window{
					Duration:           to.Ptr("05:00"),
					ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
					RecurEvery:         to.Ptr("Month Third Sunday"),
					StartDateTime:      to.Ptr("2020-04-30 08:00"),
					TimeZone:           to.Ptr("Pacific Standard Time"),
				},
				Namespace:  to.Ptr("Microsoft.Maintenance"),
				Visibility: to.Ptr(armmaintenance.VisibilityCustom),
			},
		}
		if !reflect.DeepEqual(exampleRes, res.Configuration) {
			exampleResJson, _ := json.Marshal(exampleRes)
			mockResJson, _ := json.Marshal(res.Configuration)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_UpdateForResource.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestMaintenanceConfigurations_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurations_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List(nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListMaintenanceConfigurationsResult{
			Value: []*armmaintenance.Configuration{
				{
					Name:     to.Ptr("configuration1"),
					ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
					Location: to.Ptr("westus2"),
					Properties: &armmaintenance.ConfigurationProperties{
						MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeOSImage),
						MaintenanceWindow: &armmaintenance.Window{
							Duration:           to.Ptr("05:00"),
							ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
							RecurEvery:         to.Ptr("Week Saturday,Sunday"),
							StartDateTime:      to.Ptr("2020-04-30 08:00"),
							TimeZone:           to.Ptr("Pacific Standard Time"),
						},
						Namespace:  to.Ptr("Microsoft.Maintenance"),
						Visibility: to.Ptr(armmaintenance.VisibilityCustom),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListMaintenanceConfigurationsResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListMaintenanceConfigurationsResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurations_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestMaintenanceConfigurationsForResourceGroup_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurationsResourceGroup_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"MaintenanceConfigurationsResourceGroup_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationsForResourceGroupClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List("examplerg",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurationsResourceGroup_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListMaintenanceConfigurationsResult{
			Value: []*armmaintenance.Configuration{
				{
					Name:     to.Ptr("configuration1"),
					ID:       to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
					Location: to.Ptr("westus2"),
					Properties: &armmaintenance.ConfigurationProperties{
						MaintenanceScope: to.Ptr(armmaintenance.MaintenanceScopeOSImage),
						MaintenanceWindow: &armmaintenance.Window{
							Duration:           to.Ptr("05:00"),
							ExpirationDateTime: to.Ptr("9999-12-31 00:00"),
							RecurEvery:         to.Ptr("Week Saturday,Sunday"),
							StartDateTime:      to.Ptr("2020-04-30 08:00"),
							TimeZone:           to.Ptr("Pacific Standard Time"),
						},
						Namespace:  to.Ptr("Microsoft.Maintenance"),
						Visibility: to.Ptr(armmaintenance.VisibilityCustom),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListMaintenanceConfigurationsResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListMaintenanceConfigurationsResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/MaintenanceConfigurationsResourceGroup_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestApplyUpdateForResourceGroup_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdatesResourceGroup_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ApplyUpdatesResourceGroup_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewApplyUpdateForResourceGroupClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List("examplerg",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdatesResourceGroup_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListApplyUpdate{
			Value: []*armmaintenance.ApplyUpdate{
				{
					Name: to.Ptr("e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
					Type: to.Ptr("Microsoft.Maintenance/applyUpdates"),
					ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/applyUpdates/e9b9685d-78e4-44c4-a81c-64a14f9b87b6"),
					Properties: &armmaintenance.ApplyUpdateProperties{
						ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
						Status:     to.Ptr(armmaintenance.UpdateStatusCompleted),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListApplyUpdate) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListApplyUpdate)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ApplyUpdatesResourceGroup_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestConfigurationAssignmentsWithinSubscription_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignmentsResultWithinSubscription_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"ConfigurationAssignmentsResultWithinSubscription_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewConfigurationAssignmentsWithinSubscriptionClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List(nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignmentsResultWithinSubscription_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListConfigurationAssignmentsResult{
			Value: []*armmaintenance.ConfigurationAssignment{
				{
					Name: to.Ptr("workervmConfiguration"),
					Type: to.Ptr("Microsoft.Maintenance/configurationAssignments"),
					ID:   to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/providers/Microsoft.Maintenance/configurationAssignments/workervmConfiguration"),
					Properties: &armmaintenance.ConfigurationAssignmentProperties{
						MaintenanceConfigurationID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
						ResourceID:                 to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
					},
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListConfigurationAssignmentsResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListConfigurationAssignmentsResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/ConfigurationAssignmentsResultWithinSubscription_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestOperations_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Operations_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"Operations_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewOperationsClient(cred, &options)
	pager := client.List(nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Operations_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.OperationsListResult{
			Value: []*armmaintenance.Operation{},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.OperationsListResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.OperationsListResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Operations_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestUpdates_ListParent(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Updates_ListParent.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"Updates_ListParent"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewUpdatesClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.ListParent("examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		"virtualMachines",
		"1",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Updates_ListParent.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListUpdatesResult{
			Value: []*armmaintenance.Update{
				{
					ImpactDurationInSec: to.Ptr[int32](1440),
					ImpactType:          to.Ptr(armmaintenance.ImpactType("Reboot")),
					MaintenanceScope:    to.Ptr(armmaintenance.MaintenanceScope("Resource")),
					NotBefore:           to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2018-10-09T06:17:44.235Z"); return t }()),
					Properties: &armmaintenance.UpdateProperties{
						ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1/virtualMachines/1"),
					},
					Status: to.Ptr(armmaintenance.UpdateStatusPending),
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListUpdatesResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListUpdatesResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Updates_ListParent.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

func TestUpdates_List(t *testing.T) {
	// From example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Updates_List.json
	ctx = runtime.WithHTTPHeader(ctx, map[string][]string{
		"example-id": {"Updates_List"},
	})
	defer func() {
		if r := recover(); r != nil {
			t.Fatal("stacktrace from panic: \n" + string(debug.Stack()))
		}
	}()
	client := armmaintenance.NewUpdatesClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, &options)
	pager := client.List("examplerg",
		"Microsoft.Compute",
		"virtualMachineScaleSets",
		"smdtest1",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			t.Fatalf("Failed to advance page for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Updates_List.json: %v", err)
			break
		}
		// Response check
		pagerExampleRes := armmaintenance.ListUpdatesResult{
			Value: []*armmaintenance.Update{
				{
					ImpactDurationInSec: to.Ptr[int32](1440),
					ImpactType:          to.Ptr(armmaintenance.ImpactType("Reboot")),
					MaintenanceScope:    to.Ptr(armmaintenance.MaintenanceScope("Resource")),
					NotBefore:           to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2018-10-09T06:17:44.235Z"); return t }()),
					Properties: &armmaintenance.UpdateProperties{
						ResourceID: to.Ptr("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Compute/virtualMachineScaleSets/smdtest1"),
					},
					Status: to.Ptr(armmaintenance.UpdateStatusPending),
				}},
		}
		if !reflect.DeepEqual(pagerExampleRes, nextResult.ListUpdatesResult) {
			exampleResJson, _ := json.Marshal(pagerExampleRes)
			mockResJson, _ := json.Marshal(nextResult.ListUpdatesResult)
			t.Fatalf("Mock response is not equal to example response for example specification/maintenance/resource-manager/Microsoft.Maintenance/preview/2021-09-01-preview/examples/Updates_List.json:\nmock response: %s\nexample response: %s", mockResJson, exampleResJson)
		}
	}
}

// TestMain will exec each test
func TestMain(m *testing.M) {
	setUp()
	retCode := m.Run() // exec test and this returns an exit code to pass to os
	tearDown()
	os.Exit(retCode)
}

func getEnv(key, fallback string) string {
	if value, ok := os.LookupEnv(key); ok {
		return value
	}
	return fallback
}

func setUp() {
	ctx = context.Background()
	mockHost = getEnv("AZURE_VIRTUAL_SERVER_HOST", "https://localhost:8443")

	tr := &http.Transport{}
	if err := http2.ConfigureTransport(tr); err != nil {
		fmt.Printf("Failed to configure http2 transport: %v", err)
	}
	tr.TLSClientConfig.InsecureSkipVerify = true
	client := &http.Client{Transport: tr}

	cred = &MockCredential{}

	options = arm.ClientOptions{
		ClientOptions: policy.ClientOptions{
			Logging: policy.LogOptions{
				IncludeBody: true,
			},
			Transport: client,
		},
		Endpoint: arm.Endpoint(mockHost),
	}
}

func tearDown() {

}

type MockCredential struct {
}

func (c *MockCredential) GetToken(ctx context.Context, opts policy.TokenRequestOptions) (*azcore.AccessToken, error) {
	return &azcore.AccessToken{Token: "MockToken", ExpiresOn: time.Now().Add(time.Hour * 24).UTC()}, nil
}
