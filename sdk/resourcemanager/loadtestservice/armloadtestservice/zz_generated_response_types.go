//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armloadtestservice

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"time"
)

// LoadTestsClientCreateOrUpdateResponse contains the response from method LoadTestsClient.CreateOrUpdate.
type LoadTestsClientCreateOrUpdateResponse struct {
	LoadTestResource
}

// LoadTestsClientDeletePollerResponse contains the response from method LoadTestsClient.Delete.
type LoadTestsClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *LoadTestsClientDeletePoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l LoadTestsClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (LoadTestsClientDeleteResponse, error) {
	respType := LoadTestsClientDeleteResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a LoadTestsClientDeletePollerResponse from the provided client and resume token.
func (l *LoadTestsClientDeletePollerResponse) Resume(ctx context.Context, client *LoadTestsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("LoadTestsClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &LoadTestsClientDeletePoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// LoadTestsClientDeleteResponse contains the response from method LoadTestsClient.Delete.
type LoadTestsClientDeleteResponse struct {
	// placeholder for future response values
}

// LoadTestsClientGetResponse contains the response from method LoadTestsClient.Get.
type LoadTestsClientGetResponse struct {
	LoadTestResource
}

// LoadTestsClientListByResourceGroupResponse contains the response from method LoadTestsClient.ListByResourceGroup.
type LoadTestsClientListByResourceGroupResponse struct {
	LoadTestResourcePageList
}

// LoadTestsClientListBySubscriptionResponse contains the response from method LoadTestsClient.ListBySubscription.
type LoadTestsClientListBySubscriptionResponse struct {
	LoadTestResourcePageList
}

// LoadTestsClientUpdateResponse contains the response from method LoadTestsClient.Update.
type LoadTestsClientUpdateResponse struct {
	LoadTestResource
}

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationListResult
}
