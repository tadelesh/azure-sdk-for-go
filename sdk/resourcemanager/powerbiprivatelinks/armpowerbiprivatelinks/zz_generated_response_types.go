//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armpowerbiprivatelinks

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"time"
)

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationListResult
}

// PowerBIResourcesClientCreateResponse contains the response from method PowerBIResourcesClient.Create.
type PowerBIResourcesClientCreateResponse struct {
	TenantResource
}

// PowerBIResourcesClientDeleteResponse contains the response from method PowerBIResourcesClient.Delete.
type PowerBIResourcesClientDeleteResponse struct {
	// placeholder for future response values
}

// PowerBIResourcesClientListByResourceNameResponse contains the response from method PowerBIResourcesClient.ListByResourceName.
type PowerBIResourcesClientListByResourceNameResponse struct {
	// Array of TenantResource
	TenantResourceArray []*TenantResource
}

// PowerBIResourcesClientUpdateResponse contains the response from method PowerBIResourcesClient.Update.
type PowerBIResourcesClientUpdateResponse struct {
	TenantResource
}

// PrivateEndpointConnectionsClientCreateResponse contains the response from method PrivateEndpointConnectionsClient.Create.
type PrivateEndpointConnectionsClientCreateResponse struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsClientDeletePollerResponse contains the response from method PrivateEndpointConnectionsClient.Delete.
type PrivateEndpointConnectionsClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionsClientDeletePoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PrivateEndpointConnectionsClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionsClientDeleteResponse, error) {
	respType := PrivateEndpointConnectionsClientDeleteResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionsClientDeletePollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionsClientDeletePollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionsClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionsClientDeletePoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// PrivateEndpointConnectionsClientDeleteResponse contains the response from method PrivateEndpointConnectionsClient.Delete.
type PrivateEndpointConnectionsClientDeleteResponse struct {
	// placeholder for future response values
}

// PrivateEndpointConnectionsClientGetResponse contains the response from method PrivateEndpointConnectionsClient.Get.
type PrivateEndpointConnectionsClientGetResponse struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsClientListByResourceResponse contains the response from method PrivateEndpointConnectionsClient.ListByResource.
type PrivateEndpointConnectionsClientListByResourceResponse struct {
	PrivateEndpointConnectionListResult
}

// PrivateLinkResourcesClientGetResponse contains the response from method PrivateLinkResourcesClient.Get.
type PrivateLinkResourcesClientGetResponse struct {
	PrivateLinkResource
}

// PrivateLinkResourcesClientListByResourceResponse contains the response from method PrivateLinkResourcesClient.ListByResource.
type PrivateLinkResourcesClientListByResourceResponse struct {
	PrivateLinkResourcesListResult
}

// PrivateLinkServiceResourceOperationResultsClientGetPollerResponse contains the response from method PrivateLinkServiceResourceOperationResultsClient.Get.
type PrivateLinkServiceResourceOperationResultsClientGetPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateLinkServiceResourceOperationResultsClientGetPoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PrivateLinkServiceResourceOperationResultsClientGetPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateLinkServiceResourceOperationResultsClientGetResponse, error) {
	respType := PrivateLinkServiceResourceOperationResultsClientGetResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.AsyncOperationDetail)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a PrivateLinkServiceResourceOperationResultsClientGetPollerResponse from the provided client and resume
// token.
func (l *PrivateLinkServiceResourceOperationResultsClientGetPollerResponse) Resume(ctx context.Context, client *PrivateLinkServiceResourceOperationResultsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateLinkServiceResourceOperationResultsClient.Get", token, client.pl)
	if err != nil {
		return err
	}
	poller := &PrivateLinkServiceResourceOperationResultsClientGetPoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// PrivateLinkServiceResourceOperationResultsClientGetResponse contains the response from method PrivateLinkServiceResourceOperationResultsClient.Get.
type PrivateLinkServiceResourceOperationResultsClientGetResponse struct {
	AsyncOperationDetail
}

// PrivateLinkServicesClientListByResourceGroupResponse contains the response from method PrivateLinkServicesClient.ListByResourceGroup.
type PrivateLinkServicesClientListByResourceGroupResponse struct {
	// Array of TenantResource
	TenantResourceArray []*TenantResource
}

// PrivateLinkServicesForPowerBIClientListBySubscriptionIDResponse contains the response from method PrivateLinkServicesForPowerBIClient.ListBySubscriptionID.
type PrivateLinkServicesForPowerBIClientListBySubscriptionIDResponse struct {
	// Array of TenantResource
	TenantResourceArray []*TenantResource
}
