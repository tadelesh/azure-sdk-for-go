//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armtimeseriesinsights

import (
	"context"
	"net/http"
	"time"

	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
)

// AccessPoliciesCreateOrUpdateResponse contains the response from method AccessPolicies.CreateOrUpdate.
type AccessPoliciesCreateOrUpdateResponse struct {
	AccessPoliciesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesCreateOrUpdateResult contains the result from method AccessPolicies.CreateOrUpdate.
type AccessPoliciesCreateOrUpdateResult struct {
	AccessPolicyResource
}

// AccessPoliciesDeleteResponse contains the response from method AccessPolicies.Delete.
type AccessPoliciesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesGetResponse contains the response from method AccessPolicies.Get.
type AccessPoliciesGetResponse struct {
	AccessPoliciesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesGetResult contains the result from method AccessPolicies.Get.
type AccessPoliciesGetResult struct {
	AccessPolicyResource
}

// AccessPoliciesListByEnvironmentResponse contains the response from method AccessPolicies.ListByEnvironment.
type AccessPoliciesListByEnvironmentResponse struct {
	AccessPoliciesListByEnvironmentResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesListByEnvironmentResult contains the result from method AccessPolicies.ListByEnvironment.
type AccessPoliciesListByEnvironmentResult struct {
	AccessPolicyListResponse
}

// AccessPoliciesUpdateResponse contains the response from method AccessPolicies.Update.
type AccessPoliciesUpdateResponse struct {
	AccessPoliciesUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesUpdateResult contains the result from method AccessPolicies.Update.
type AccessPoliciesUpdateResult struct {
	AccessPolicyResource
}

// EnvironmentsCreateOrUpdatePollerResponse contains the response from method Environments.CreateOrUpdate.
type EnvironmentsCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *EnvironmentsCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l EnvironmentsCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (EnvironmentsCreateOrUpdateResponse, error) {
	respType := EnvironmentsCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.EnvironmentResourceClassification)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a EnvironmentsCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *EnvironmentsCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *EnvironmentsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("EnvironmentsClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &EnvironmentsCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// EnvironmentsCreateOrUpdateResponse contains the response from method Environments.CreateOrUpdate.
type EnvironmentsCreateOrUpdateResponse struct {
	EnvironmentsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EnvironmentsCreateOrUpdateResult contains the result from method Environments.CreateOrUpdate.
type EnvironmentsCreateOrUpdateResult struct {
	EnvironmentResourceClassification
}

// UnmarshalJSON implements the json.Unmarshaller interface for type EnvironmentsCreateOrUpdateResult.
func (e *EnvironmentsCreateOrUpdateResult) UnmarshalJSON(data []byte) error {
	res, err := unmarshalEnvironmentResourceClassification(data)
	if err != nil {
		return err
	}
	e.EnvironmentResourceClassification = res
	return nil
}

// EnvironmentsDeleteResponse contains the response from method Environments.Delete.
type EnvironmentsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EnvironmentsGetResponse contains the response from method Environments.Get.
type EnvironmentsGetResponse struct {
	EnvironmentsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EnvironmentsGetResult contains the result from method Environments.Get.
type EnvironmentsGetResult struct {
	EnvironmentResourceClassification
}

// UnmarshalJSON implements the json.Unmarshaller interface for type EnvironmentsGetResult.
func (e *EnvironmentsGetResult) UnmarshalJSON(data []byte) error {
	res, err := unmarshalEnvironmentResourceClassification(data)
	if err != nil {
		return err
	}
	e.EnvironmentResourceClassification = res
	return nil
}

// EnvironmentsListByResourceGroupResponse contains the response from method Environments.ListByResourceGroup.
type EnvironmentsListByResourceGroupResponse struct {
	EnvironmentsListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EnvironmentsListByResourceGroupResult contains the result from method Environments.ListByResourceGroup.
type EnvironmentsListByResourceGroupResult struct {
	EnvironmentListResponse
}

// EnvironmentsListBySubscriptionResponse contains the response from method Environments.ListBySubscription.
type EnvironmentsListBySubscriptionResponse struct {
	EnvironmentsListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EnvironmentsListBySubscriptionResult contains the result from method Environments.ListBySubscription.
type EnvironmentsListBySubscriptionResult struct {
	EnvironmentListResponse
}

// EnvironmentsUpdatePollerResponse contains the response from method Environments.Update.
type EnvironmentsUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *EnvironmentsUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l EnvironmentsUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (EnvironmentsUpdateResponse, error) {
	respType := EnvironmentsUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.EnvironmentResourceClassification)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a EnvironmentsUpdatePollerResponse from the provided client and resume token.
func (l *EnvironmentsUpdatePollerResponse) Resume(ctx context.Context, client *EnvironmentsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("EnvironmentsClient.Update", token, client.pl, client.updateHandleError)
	if err != nil {
		return err
	}
	poller := &EnvironmentsUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// EnvironmentsUpdateResponse contains the response from method Environments.Update.
type EnvironmentsUpdateResponse struct {
	EnvironmentsUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EnvironmentsUpdateResult contains the result from method Environments.Update.
type EnvironmentsUpdateResult struct {
	EnvironmentResourceClassification
}

// UnmarshalJSON implements the json.Unmarshaller interface for type EnvironmentsUpdateResult.
func (e *EnvironmentsUpdateResult) UnmarshalJSON(data []byte) error {
	res, err := unmarshalEnvironmentResourceClassification(data)
	if err != nil {
		return err
	}
	e.EnvironmentResourceClassification = res
	return nil
}

// EventSourcesCreateOrUpdateResponse contains the response from method EventSources.CreateOrUpdate.
type EventSourcesCreateOrUpdateResponse struct {
	EventSourcesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EventSourcesCreateOrUpdateResult contains the result from method EventSources.CreateOrUpdate.
type EventSourcesCreateOrUpdateResult struct {
	EventSourceResourceClassification
}

// UnmarshalJSON implements the json.Unmarshaller interface for type EventSourcesCreateOrUpdateResult.
func (e *EventSourcesCreateOrUpdateResult) UnmarshalJSON(data []byte) error {
	res, err := unmarshalEventSourceResourceClassification(data)
	if err != nil {
		return err
	}
	e.EventSourceResourceClassification = res
	return nil
}

// EventSourcesDeleteResponse contains the response from method EventSources.Delete.
type EventSourcesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EventSourcesGetResponse contains the response from method EventSources.Get.
type EventSourcesGetResponse struct {
	EventSourcesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EventSourcesGetResult contains the result from method EventSources.Get.
type EventSourcesGetResult struct {
	EventSourceResourceClassification
}

// UnmarshalJSON implements the json.Unmarshaller interface for type EventSourcesGetResult.
func (e *EventSourcesGetResult) UnmarshalJSON(data []byte) error {
	res, err := unmarshalEventSourceResourceClassification(data)
	if err != nil {
		return err
	}
	e.EventSourceResourceClassification = res
	return nil
}

// EventSourcesListByEnvironmentResponse contains the response from method EventSources.ListByEnvironment.
type EventSourcesListByEnvironmentResponse struct {
	EventSourcesListByEnvironmentResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EventSourcesListByEnvironmentResult contains the result from method EventSources.ListByEnvironment.
type EventSourcesListByEnvironmentResult struct {
	EventSourceListResponse
}

// EventSourcesUpdateResponse contains the response from method EventSources.Update.
type EventSourcesUpdateResponse struct {
	EventSourcesUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EventSourcesUpdateResult contains the result from method EventSources.Update.
type EventSourcesUpdateResult struct {
	EventSourceResourceClassification
}

// UnmarshalJSON implements the json.Unmarshaller interface for type EventSourcesUpdateResult.
func (e *EventSourcesUpdateResult) UnmarshalJSON(data []byte) error {
	res, err := unmarshalEventSourceResourceClassification(data)
	if err != nil {
		return err
	}
	e.EventSourceResourceClassification = res
	return nil
}

// OperationsListResponse contains the response from method Operations.List.
type OperationsListResponse struct {
	OperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsListResult contains the result from method Operations.List.
type OperationsListResult struct {
	OperationListResult
}

// PrivateEndpointConnectionsCreateOrUpdateResponse contains the response from method PrivateEndpointConnections.CreateOrUpdate.
type PrivateEndpointConnectionsCreateOrUpdateResponse struct {
	PrivateEndpointConnectionsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsCreateOrUpdateResult contains the result from method PrivateEndpointConnections.CreateOrUpdate.
type PrivateEndpointConnectionsCreateOrUpdateResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsDeleteResponse contains the response from method PrivateEndpointConnections.Delete.
type PrivateEndpointConnectionsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsGetResponse contains the response from method PrivateEndpointConnections.Get.
type PrivateEndpointConnectionsGetResponse struct {
	PrivateEndpointConnectionsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsGetResult contains the result from method PrivateEndpointConnections.Get.
type PrivateEndpointConnectionsGetResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsListByEnvironmentResponse contains the response from method PrivateEndpointConnections.ListByEnvironment.
type PrivateEndpointConnectionsListByEnvironmentResponse struct {
	PrivateEndpointConnectionsListByEnvironmentResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsListByEnvironmentResult contains the result from method PrivateEndpointConnections.ListByEnvironment.
type PrivateEndpointConnectionsListByEnvironmentResult struct {
	PrivateEndpointConnectionListResult
}

// PrivateLinkResourcesListSupportedResponse contains the response from method PrivateLinkResources.ListSupported.
type PrivateLinkResourcesListSupportedResponse struct {
	PrivateLinkResourcesListSupportedResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourcesListSupportedResult contains the result from method PrivateLinkResources.ListSupported.
type PrivateLinkResourcesListSupportedResult struct {
	PrivateLinkResourceListResult
}

// ReferenceDataSetsCreateOrUpdateResponse contains the response from method ReferenceDataSets.CreateOrUpdate.
type ReferenceDataSetsCreateOrUpdateResponse struct {
	ReferenceDataSetsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReferenceDataSetsCreateOrUpdateResult contains the result from method ReferenceDataSets.CreateOrUpdate.
type ReferenceDataSetsCreateOrUpdateResult struct {
	ReferenceDataSetResource
}

// ReferenceDataSetsDeleteResponse contains the response from method ReferenceDataSets.Delete.
type ReferenceDataSetsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReferenceDataSetsGetResponse contains the response from method ReferenceDataSets.Get.
type ReferenceDataSetsGetResponse struct {
	ReferenceDataSetsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReferenceDataSetsGetResult contains the result from method ReferenceDataSets.Get.
type ReferenceDataSetsGetResult struct {
	ReferenceDataSetResource
}

// ReferenceDataSetsListByEnvironmentResponse contains the response from method ReferenceDataSets.ListByEnvironment.
type ReferenceDataSetsListByEnvironmentResponse struct {
	ReferenceDataSetsListByEnvironmentResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReferenceDataSetsListByEnvironmentResult contains the result from method ReferenceDataSets.ListByEnvironment.
type ReferenceDataSetsListByEnvironmentResult struct {
	ReferenceDataSetListResponse
}

// ReferenceDataSetsUpdateResponse contains the response from method ReferenceDataSets.Update.
type ReferenceDataSetsUpdateResponse struct {
	ReferenceDataSetsUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReferenceDataSetsUpdateResult contains the result from method ReferenceDataSets.Update.
type ReferenceDataSetsUpdateResult struct {
	ReferenceDataSetResource
}
