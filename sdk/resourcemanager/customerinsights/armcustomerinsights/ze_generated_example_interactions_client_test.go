//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcustomerinsights_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/customerinsights/armcustomerinsights"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/InteractionsCreateOrUpdate.json
func ExampleInteractionsClient_BeginCreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewInteractionsClient("<subscription-id>", cred, nil)
	poller, err := client.BeginCreateOrUpdate(ctx,
		"<resource-group-name>",
		"<hub-name>",
		"<interaction-name>",
		armcustomerinsights.InteractionResourceFormat{
			Properties: &armcustomerinsights.InteractionTypeDefinition{
				LargeImage:       to.Ptr("<large-image>"),
				MediumImage:      to.Ptr("<medium-image>"),
				SmallImage:       to.Ptr("<small-image>"),
				APIEntitySetName: to.Ptr("<apientity-set-name>"),
				Fields: []*armcustomerinsights.PropertyDefinition{
					{
						FieldName:  to.Ptr("<field-name>"),
						FieldType:  to.Ptr("<field-type>"),
						IsArray:    to.Ptr(false),
						IsRequired: to.Ptr(true),
					},
					{
						FieldName: to.Ptr("<field-name>"),
						FieldType: to.Ptr("<field-type>"),
					}},
				IDPropertyNames: []*string{
					to.Ptr("TestInteractionType6358")},
				PrimaryParticipantProfilePropertyName: to.Ptr("<primary-participant-profile-property-name>"),
			},
		},
		&armcustomerinsights.InteractionsClientBeginCreateOrUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	res, err := poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/InteractionsGet.json
func ExampleInteractionsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewInteractionsClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<hub-name>",
		"<interaction-name>",
		&armcustomerinsights.InteractionsClientGetOptions{LocaleCode: nil})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/InteractionsListByHub.json
func ExampleInteractionsClient_ListByHub() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewInteractionsClient("<subscription-id>", cred, nil)
	pager := client.ListByHub("<resource-group-name>",
		"<hub-name>",
		&armcustomerinsights.InteractionsClientListByHubOptions{LocaleCode: nil})
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/InteractionsSuggestRelationshipLinks.json
func ExampleInteractionsClient_SuggestRelationshipLinks() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewInteractionsClient("<subscription-id>", cred, nil)
	res, err := client.SuggestRelationshipLinks(ctx,
		"<resource-group-name>",
		"<hub-name>",
		"<interaction-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}
