//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcustomerinsights_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/customerinsights/armcustomerinsights"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/KpiCreateOrUpdate.json
func ExampleKpiClient_BeginCreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewKpiClient("<subscription-id>", cred, nil)
	poller, err := client.BeginCreateOrUpdate(ctx,
		"<resource-group-name>",
		"<hub-name>",
		"<kpi-name>",
		armcustomerinsights.KpiResourceFormat{
			Properties: &armcustomerinsights.KpiDefinition{
				Description: map[string]*string{
					"en-us": to.Ptr("Kpi Description"),
				},
				Aliases: []*armcustomerinsights.KpiAlias{
					{
						AliasName:  to.Ptr("<alias-name>"),
						Expression: to.Ptr("<expression>"),
					}},
				CalculationWindow: to.Ptr(armcustomerinsights.CalculationWindowTypesDay),
				DisplayName: map[string]*string{
					"en-us": to.Ptr("Kpi DisplayName"),
				},
				EntityType:     to.Ptr(armcustomerinsights.EntityTypesProfile),
				EntityTypeName: to.Ptr("<entity-type-name>"),
				Expression:     to.Ptr("<expression>"),
				Function:       to.Ptr(armcustomerinsights.KpiFunctionsSum),
				GroupBy: []*string{
					to.Ptr("SavingAccountBalance")},
				ThresHolds: &armcustomerinsights.KpiThresholds{
					IncreasingKpi: to.Ptr(true),
					LowerLimit:    to.Ptr[float64](5),
					UpperLimit:    to.Ptr[float64](50),
				},
				Unit: to.Ptr("<unit>"),
			},
		},
		&armcustomerinsights.KpiClientBeginCreateOrUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	res, err := poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/KpiGet.json
func ExampleKpiClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewKpiClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<hub-name>",
		"<kpi-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/KpiDelete.json
func ExampleKpiClient_BeginDelete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewKpiClient("<subscription-id>", cred, nil)
	poller, err := client.BeginDelete(ctx,
		"<resource-group-name>",
		"<hub-name>",
		"<kpi-name>",
		&armcustomerinsights.KpiClientBeginDeleteOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	_, err = poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
		return
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/KpiReprocess.json
func ExampleKpiClient_Reprocess() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewKpiClient("<subscription-id>", cred, nil)
	_, err = client.Reprocess(ctx,
		"<resource-group-name>",
		"<hub-name>",
		"<kpi-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/customer-insights/resource-manager/Microsoft.CustomerInsights/stable/2017-04-26/examples/KpiListByHub.json
func ExampleKpiClient_ListByHub() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armcustomerinsights.NewKpiClient("<subscription-id>", cred, nil)
	pager := client.ListByHub("<resource-group-name>",
		"<hub-name>",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}
