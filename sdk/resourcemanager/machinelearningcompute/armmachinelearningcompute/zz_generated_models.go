//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armmachinelearningcompute

import "time"

// AcsClusterProperties - Information about the container service backing the cluster
type AcsClusterProperties struct {
	// REQUIRED; Type of orchestrator. It cannot be changed once the cluster is created.
	OrchestratorType *OrchestratorType `json:"orchestratorType,omitempty"`

	// The number of agent nodes in the Container Service. This can be changed to scale the cluster.
	AgentCount *int32 `json:"agentCount,omitempty"`

	// The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created. This list is non exhaustive;
	// refer to https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes
	// for the possible VM sizes.
	AgentVMSize *AgentVMSizeTypes `json:"agentVmSize,omitempty"`

	// The number of master nodes in the container service.
	MasterCount *int32 `json:"masterCount,omitempty"`

	// Orchestrator specific properties
	OrchestratorProperties *KubernetesClusterProperties `json:"orchestratorProperties,omitempty"`

	// The system services deployed to the cluster
	SystemServices []*SystemService `json:"systemServices,omitempty"`

	// READ-ONLY; The FQDN of the cluster.
	ClusterFqdn *string `json:"clusterFqdn,omitempty" azure:"ro"`
}

// AppInsightsCredentials - AppInsights credentials.
type AppInsightsCredentials struct {
	// The AppInsights application ID.
	AppID *string `json:"appId,omitempty"`

	// The AppInsights instrumentation key. This is not returned in response of GET/PUT on the resource. To see this please call
	// listKeys API.
	InstrumentationKey *string `json:"instrumentationKey,omitempty"`
}

// AppInsightsProperties - Properties of App Insights.
type AppInsightsProperties struct {
	// ARM resource ID of the App Insights.
	ResourceID *string `json:"resourceId,omitempty"`
}

// AutoScaleConfiguration - AutoScale configuration properties.
type AutoScaleConfiguration struct {
	// The maximum number of replicas for each service.
	MaxReplicas *int32 `json:"maxReplicas,omitempty"`

	// The minimum number of replicas for each service.
	MinReplicas *int32 `json:"minReplicas,omitempty"`

	// Refresh period in seconds.
	RefreshPeriodInSeconds *int32 `json:"refreshPeriodInSeconds,omitempty"`

	// If auto-scale is enabled for all services. Each service can turn it off individually.
	Status *Status `json:"status,omitempty"`

	// The target utilization.
	TargetUtilization *float32 `json:"targetUtilization,omitempty"`
}

// AvailableOperations - Available operation list.
type AvailableOperations struct {
	// An array of available operations.
	Value []*ResourceOperation `json:"value,omitempty"`
}

// CheckSystemServicesUpdatesAvailableResponse - Information about updates available for system services in a cluster.
type CheckSystemServicesUpdatesAvailableResponse struct {
	// READ-ONLY; Yes if updates are available for the system services, No if not.
	UpdatesAvailable *UpdatesAvailable `json:"updatesAvailable,omitempty" azure:"ro"`
}

// ClientListAvailableOperationsOptions contains the optional parameters for the Client.ListAvailableOperations method.
type ClientListAvailableOperationsOptions struct {
	// placeholder for future optional parameters
}

// ContainerRegistryCredentials - Information about the Azure Container Registry which contains the images deployed to the
// cluster.
type ContainerRegistryCredentials struct {
	// READ-ONLY; The ACR login server name. User name is the first part of the FQDN.
	LoginServer *string `json:"loginServer,omitempty" azure:"ro"`

	// READ-ONLY; The ACR primary password.
	Password *string `json:"password,omitempty" azure:"ro"`

	// READ-ONLY; The ACR secondary password.
	Password2 *string `json:"password2,omitempty" azure:"ro"`

	// READ-ONLY; The ACR login username.
	Username *string `json:"username,omitempty" azure:"ro"`
}

// ContainerRegistryProperties - Properties of Azure Container Registry.
type ContainerRegistryProperties struct {
	// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided
	// one will be created. This cannot be changed once the cluster is created.
	ResourceID *string `json:"resourceId,omitempty"`
}

// ContainerServiceCredentials - Information about the Azure Container Registry which contains the images deployed to the
// cluster.
type ContainerServiceCredentials struct {
	// READ-ONLY; The ACS kube config file.
	AcsKubeConfig *string `json:"acsKubeConfig,omitempty" azure:"ro"`

	// READ-ONLY; The ACR image pull secret name which was created in Kubernetes.
	ImagePullSecretName *string `json:"imagePullSecretName,omitempty" azure:"ro"`

	// READ-ONLY; Service principal configuration used by Kubernetes.
	ServicePrincipalConfiguration *ServicePrincipalProperties `json:"servicePrincipalConfiguration,omitempty" azure:"ro"`
}

// ErrorDetail - Error detail information.
type ErrorDetail struct {
	// REQUIRED; Error code.
	Code *string `json:"code,omitempty"`

	// REQUIRED; Error message.
	Message *string `json:"message,omitempty"`
}

// ErrorResponse - Error response information.
type ErrorResponse struct {
	// REQUIRED; Error code.
	Code *string `json:"code,omitempty"`

	// REQUIRED; Error message.
	Message *string `json:"message,omitempty"`

	// An array of error detail objects.
	Details []*ErrorDetail `json:"details,omitempty"`
}

// ErrorResponseWrapper - Wrapper for error response to follow ARM guidelines.
type ErrorResponseWrapper struct {
	// The error response.
	Error *ErrorResponse `json:"error,omitempty"`
}

// GlobalServiceConfiguration - Global configuration for services in the cluster.
type GlobalServiceConfiguration struct {
	// OPTIONAL; Contains additional key/value pairs not defined in the schema.
	AdditionalProperties map[string]interface{}

	// The auto-scale configuration
	AutoScale *AutoScaleConfiguration `json:"autoScale,omitempty"`

	// The configuration ETag for updates.
	Etag *string `json:"etag,omitempty"`

	// The SSL configuration properties
	SSL *SSLConfiguration `json:"ssl,omitempty"`

	// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have
	// auth keys.
	ServiceAuth *ServiceAuthConfiguration `json:"serviceAuth,omitempty"`
}

// KubernetesClusterProperties - Kubernetes cluster specific properties
type KubernetesClusterProperties struct {
	// The Azure Service Principal used by Kubernetes
	ServicePrincipal *ServicePrincipalProperties `json:"servicePrincipal,omitempty"`
}

// OperationalizationCluster - Instance of an Azure ML Operationalization Cluster resource.
type OperationalizationCluster struct {
	// REQUIRED; Specifies the location of the resource.
	Location *string `json:"location,omitempty"`

	// Properties of an operationalization cluster.
	Properties *OperationalizationClusterProperties `json:"properties,omitempty"`

	// Contains resource tags defined as key/value pairs.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Specifies the resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Specifies the name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Specifies the type of the resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// OperationalizationClusterCredentials - Credentials to resources in the cluster.
type OperationalizationClusterCredentials struct {
	// Credentials for Azure AppInsights.
	AppInsights *AppInsightsCredentials `json:"appInsights,omitempty"`

	// Credentials for Azure Container Registry.
	ContainerRegistry *ContainerRegistryCredentials `json:"containerRegistry,omitempty"`

	// Credentials for Azure Container Service.
	ContainerService *ContainerServiceCredentials `json:"containerService,omitempty"`

	// The SSL configuration for the services.
	SSLConfiguration *SSLConfiguration `json:"sslConfiguration,omitempty"`

	// Global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
	ServiceAuthConfiguration *ServiceAuthConfiguration `json:"serviceAuthConfiguration,omitempty"`

	// Credentials for the Storage Account.
	StorageAccount *StorageAccountCredentials `json:"storageAccount,omitempty"`
}

// OperationalizationClusterProperties - Properties of an operationalization cluster
type OperationalizationClusterProperties struct {
	// REQUIRED; The cluster type.
	ClusterType *ClusterType `json:"clusterType,omitempty"`

	// AppInsights configuration.
	AppInsights *AppInsightsProperties `json:"appInsights,omitempty"`

	// Container Registry properties.
	ContainerRegistry *ContainerRegistryProperties `json:"containerRegistry,omitempty"`

	// Parameters for the Azure Container Service cluster.
	ContainerService *AcsClusterProperties `json:"containerService,omitempty"`

	// The description of the cluster.
	Description *string `json:"description,omitempty"`

	// Contains global configuration for the web services in the cluster.
	GlobalServiceConfiguration *GlobalServiceConfiguration `json:"globalServiceConfiguration,omitempty"`

	// Storage Account properties.
	StorageAccount *StorageAccountProperties `json:"storageAccount,omitempty"`

	// READ-ONLY; The date and time when the cluster was created.
	CreatedOn *time.Time `json:"createdOn,omitempty" azure:"ro"`

	// READ-ONLY; The date and time when the cluster was last modified.
	ModifiedOn *time.Time `json:"modifiedOn,omitempty" azure:"ro"`

	// READ-ONLY; List of provisioning errors reported by the resource provider.
	ProvisioningErrors []*ErrorResponseWrapper `json:"provisioningErrors,omitempty" azure:"ro"`

	// READ-ONLY; The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState *OperationStatus `json:"provisioningState,omitempty" azure:"ro"`
}

// OperationalizationClusterUpdateParameters - Parameters for PATCH operation on an operationalization cluster
type OperationalizationClusterUpdateParameters struct {
	// Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this
	// resource (across resource groups). A maximum of 15 tags can be provided for a
	// resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
	Tags map[string]*string `json:"tags,omitempty"`
}

// OperationalizationClustersClientBeginCreateOrUpdateOptions contains the optional parameters for the OperationalizationClustersClient.BeginCreateOrUpdate
// method.
type OperationalizationClustersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// OperationalizationClustersClientBeginDeleteOptions contains the optional parameters for the OperationalizationClustersClient.BeginDelete
// method.
type OperationalizationClustersClientBeginDeleteOptions struct {
	// If true, deletes all resources associated with this cluster.
	DeleteAll *bool
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// OperationalizationClustersClientBeginUpdateSystemServicesOptions contains the optional parameters for the OperationalizationClustersClient.BeginUpdateSystemServices
// method.
type OperationalizationClustersClientBeginUpdateSystemServicesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// OperationalizationClustersClientCheckSystemServicesUpdatesAvailableOptions contains the optional parameters for the OperationalizationClustersClient.CheckSystemServicesUpdatesAvailable
// method.
type OperationalizationClustersClientCheckSystemServicesUpdatesAvailableOptions struct {
	// placeholder for future optional parameters
}

// OperationalizationClustersClientGetOptions contains the optional parameters for the OperationalizationClustersClient.Get
// method.
type OperationalizationClustersClientGetOptions struct {
	// placeholder for future optional parameters
}

// OperationalizationClustersClientListByResourceGroupOptions contains the optional parameters for the OperationalizationClustersClient.ListByResourceGroup
// method.
type OperationalizationClustersClientListByResourceGroupOptions struct {
	// Continuation token for pagination.
	Skiptoken *string
}

// OperationalizationClustersClientListBySubscriptionIDOptions contains the optional parameters for the OperationalizationClustersClient.ListBySubscriptionID
// method.
type OperationalizationClustersClientListBySubscriptionIDOptions struct {
	// Continuation token for pagination.
	Skiptoken *string
}

// OperationalizationClustersClientListKeysOptions contains the optional parameters for the OperationalizationClustersClient.ListKeys
// method.
type OperationalizationClustersClientListKeysOptions struct {
	// placeholder for future optional parameters
}

// OperationalizationClustersClientUpdateOptions contains the optional parameters for the OperationalizationClustersClient.Update
// method.
type OperationalizationClustersClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PaginatedOperationalizationClustersList - Paginated list of operationalization clusters.
type PaginatedOperationalizationClustersList struct {
	// A continuation link (absolute URI) to the next page of results in the list.
	NextLink *string `json:"nextLink,omitempty"`

	// An array of cluster objects.
	Value []*OperationalizationCluster `json:"value,omitempty"`
}

// Resource - Azure resource
type Resource struct {
	// REQUIRED; Specifies the location of the resource.
	Location *string `json:"location,omitempty"`

	// Contains resource tags defined as key/value pairs.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Specifies the resource ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Specifies the name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Specifies the type of the resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceOperation - Resource operation.
type ResourceOperation struct {
	// Display of the operation.
	Display *ResourceOperationDisplay `json:"display,omitempty"`

	// Name of this operation.
	Name *string `json:"name,omitempty"`

	// The operation origin.
	Origin *string `json:"origin,omitempty"`
}

// ResourceOperationDisplay - Display of the operation.
type ResourceOperationDisplay struct {
	// The description of the operation.
	Description *string `json:"description,omitempty"`

	// The operation.
	Operation *string `json:"operation,omitempty"`

	// The resource provider name.
	Provider *string `json:"provider,omitempty"`

	// The resource name.
	Resource *string `json:"resource,omitempty"`
}

// SSLConfiguration - SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.
type SSLConfiguration struct {
	// The SSL cert data in PEM format.
	Cert *string `json:"cert,omitempty"`

	// The CName of the certificate.
	Cname *string `json:"cname,omitempty"`

	// The SSL key data in PEM format. This is not returned in response of GET/PUT on the resource. To see this please call listKeys
	// API.
	Key *string `json:"key,omitempty"`

	// SSL status. Allowed values are Enabled and Disabled.
	Status *Status `json:"status,omitempty"`
}

// ServiceAuthConfiguration - Global service auth configuration properties. These are the data-plane authorization keys and
// are used if a service doesn't define it's own.
type ServiceAuthConfiguration struct {
	// REQUIRED; The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call
	// listKeys API.
	PrimaryAuthKeyHash *string `json:"primaryAuthKeyHash,omitempty"`

	// REQUIRED; The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please
	// call listKeys API.
	SecondaryAuthKeyHash *string `json:"secondaryAuthKeyHash,omitempty"`
}

// ServicePrincipalProperties - The Azure service principal used by Kubernetes for configuring load balancers
type ServicePrincipalProperties struct {
	// REQUIRED; The service principal client ID
	ClientID *string `json:"clientId,omitempty"`

	// REQUIRED; The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please
	// call listKeys.
	Secret *string `json:"secret,omitempty"`
}

// StorageAccountCredentials - Access information for the storage account.
type StorageAccountCredentials struct {
	// READ-ONLY; The primary key of the storage account.
	PrimaryKey *string `json:"primaryKey,omitempty" azure:"ro"`

	// READ-ONLY; The ARM resource ID of the storage account.
	ResourceID *string `json:"resourceId,omitempty" azure:"ro"`

	// READ-ONLY; The secondary key of the storage account.
	SecondaryKey *string `json:"secondaryKey,omitempty" azure:"ro"`
}

// StorageAccountProperties - Properties of Storage Account.
type StorageAccountProperties struct {
	// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot
	// be changed once the cluster is created.
	ResourceID *string `json:"resourceId,omitempty"`
}

// SystemService - Information about a system service deployed in the cluster
type SystemService struct {
	// REQUIRED; The system service type
	SystemServiceType *SystemServiceType `json:"systemServiceType,omitempty"`

	// READ-ONLY; The public IP address of the system service
	PublicIPAddress *string `json:"publicIpAddress,omitempty" azure:"ro"`

	// READ-ONLY; The state of the system service
	Version *string `json:"version,omitempty" azure:"ro"`
}

// UpdateSystemServicesResponse - Response of the update system services API
type UpdateSystemServicesResponse struct {
	// READ-ONLY; The date and time when the last system services update completed.
	UpdateCompletedOn *time.Time `json:"updateCompletedOn,omitempty" azure:"ro"`

	// READ-ONLY; The date and time when the last system services update was started.
	UpdateStartedOn *time.Time `json:"updateStartedOn,omitempty" azure:"ro"`

	// READ-ONLY; Update status
	UpdateStatus *OperationStatus `json:"updateStatus,omitempty" azure:"ro"`
}
