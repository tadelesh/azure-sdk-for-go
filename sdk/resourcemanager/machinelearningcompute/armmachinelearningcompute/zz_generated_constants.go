//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armmachinelearningcompute

const (
	moduleName    = "armmachinelearningcompute"
	moduleVersion = "v0.2.0"
)

// AgentVMSizeTypes - The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created. This list
// is non exhaustive; refer to https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes
// for the possible VM sizes.
type AgentVMSizeTypes string

const (
	AgentVMSizeTypesStandardA0    AgentVMSizeTypes = "Standard_A0"
	AgentVMSizeTypesStandardA1    AgentVMSizeTypes = "Standard_A1"
	AgentVMSizeTypesStandardA10   AgentVMSizeTypes = "Standard_A10"
	AgentVMSizeTypesStandardA11   AgentVMSizeTypes = "Standard_A11"
	AgentVMSizeTypesStandardA2    AgentVMSizeTypes = "Standard_A2"
	AgentVMSizeTypesStandardA3    AgentVMSizeTypes = "Standard_A3"
	AgentVMSizeTypesStandardA4    AgentVMSizeTypes = "Standard_A4"
	AgentVMSizeTypesStandardA5    AgentVMSizeTypes = "Standard_A5"
	AgentVMSizeTypesStandardA6    AgentVMSizeTypes = "Standard_A6"
	AgentVMSizeTypesStandardA7    AgentVMSizeTypes = "Standard_A7"
	AgentVMSizeTypesStandardA8    AgentVMSizeTypes = "Standard_A8"
	AgentVMSizeTypesStandardA9    AgentVMSizeTypes = "Standard_A9"
	AgentVMSizeTypesStandardD1    AgentVMSizeTypes = "Standard_D1"
	AgentVMSizeTypesStandardD11   AgentVMSizeTypes = "Standard_D11"
	AgentVMSizeTypesStandardD11V2 AgentVMSizeTypes = "Standard_D11_v2"
	AgentVMSizeTypesStandardD12   AgentVMSizeTypes = "Standard_D12"
	AgentVMSizeTypesStandardD12V2 AgentVMSizeTypes = "Standard_D12_v2"
	AgentVMSizeTypesStandardD13   AgentVMSizeTypes = "Standard_D13"
	AgentVMSizeTypesStandardD13V2 AgentVMSizeTypes = "Standard_D13_v2"
	AgentVMSizeTypesStandardD14   AgentVMSizeTypes = "Standard_D14"
	AgentVMSizeTypesStandardD14V2 AgentVMSizeTypes = "Standard_D14_v2"
	AgentVMSizeTypesStandardD1V2  AgentVMSizeTypes = "Standard_D1_v2"
	AgentVMSizeTypesStandardD2    AgentVMSizeTypes = "Standard_D2"
	AgentVMSizeTypesStandardD2V2  AgentVMSizeTypes = "Standard_D2_v2"
	AgentVMSizeTypesStandardD3    AgentVMSizeTypes = "Standard_D3"
	AgentVMSizeTypesStandardD3V2  AgentVMSizeTypes = "Standard_D3_v2"
	AgentVMSizeTypesStandardD4    AgentVMSizeTypes = "Standard_D4"
	AgentVMSizeTypesStandardD4V2  AgentVMSizeTypes = "Standard_D4_v2"
	AgentVMSizeTypesStandardD5V2  AgentVMSizeTypes = "Standard_D5_v2"
	AgentVMSizeTypesStandardDS1   AgentVMSizeTypes = "Standard_DS1"
	AgentVMSizeTypesStandardDS11  AgentVMSizeTypes = "Standard_DS11"
	AgentVMSizeTypesStandardDS12  AgentVMSizeTypes = "Standard_DS12"
	AgentVMSizeTypesStandardDS13  AgentVMSizeTypes = "Standard_DS13"
	AgentVMSizeTypesStandardDS14  AgentVMSizeTypes = "Standard_DS14"
	AgentVMSizeTypesStandardDS2   AgentVMSizeTypes = "Standard_DS2"
	AgentVMSizeTypesStandardDS3   AgentVMSizeTypes = "Standard_DS3"
	AgentVMSizeTypesStandardDS4   AgentVMSizeTypes = "Standard_DS4"
	AgentVMSizeTypesStandardG1    AgentVMSizeTypes = "Standard_G1"
	AgentVMSizeTypesStandardG2    AgentVMSizeTypes = "Standard_G2"
	AgentVMSizeTypesStandardG3    AgentVMSizeTypes = "Standard_G3"
	AgentVMSizeTypesStandardG4    AgentVMSizeTypes = "Standard_G4"
	AgentVMSizeTypesStandardG5    AgentVMSizeTypes = "Standard_G5"
	AgentVMSizeTypesStandardGS1   AgentVMSizeTypes = "Standard_GS1"
	AgentVMSizeTypesStandardGS2   AgentVMSizeTypes = "Standard_GS2"
	AgentVMSizeTypesStandardGS3   AgentVMSizeTypes = "Standard_GS3"
	AgentVMSizeTypesStandardGS4   AgentVMSizeTypes = "Standard_GS4"
	AgentVMSizeTypesStandardGS5   AgentVMSizeTypes = "Standard_GS5"
)

// PossibleAgentVMSizeTypesValues returns the possible values for the AgentVMSizeTypes const type.
func PossibleAgentVMSizeTypesValues() []AgentVMSizeTypes {
	return []AgentVMSizeTypes{
		AgentVMSizeTypesStandardA0,
		AgentVMSizeTypesStandardA1,
		AgentVMSizeTypesStandardA10,
		AgentVMSizeTypesStandardA11,
		AgentVMSizeTypesStandardA2,
		AgentVMSizeTypesStandardA3,
		AgentVMSizeTypesStandardA4,
		AgentVMSizeTypesStandardA5,
		AgentVMSizeTypesStandardA6,
		AgentVMSizeTypesStandardA7,
		AgentVMSizeTypesStandardA8,
		AgentVMSizeTypesStandardA9,
		AgentVMSizeTypesStandardD1,
		AgentVMSizeTypesStandardD11,
		AgentVMSizeTypesStandardD11V2,
		AgentVMSizeTypesStandardD12,
		AgentVMSizeTypesStandardD12V2,
		AgentVMSizeTypesStandardD13,
		AgentVMSizeTypesStandardD13V2,
		AgentVMSizeTypesStandardD14,
		AgentVMSizeTypesStandardD14V2,
		AgentVMSizeTypesStandardD1V2,
		AgentVMSizeTypesStandardD2,
		AgentVMSizeTypesStandardD2V2,
		AgentVMSizeTypesStandardD3,
		AgentVMSizeTypesStandardD3V2,
		AgentVMSizeTypesStandardD4,
		AgentVMSizeTypesStandardD4V2,
		AgentVMSizeTypesStandardD5V2,
		AgentVMSizeTypesStandardDS1,
		AgentVMSizeTypesStandardDS11,
		AgentVMSizeTypesStandardDS12,
		AgentVMSizeTypesStandardDS13,
		AgentVMSizeTypesStandardDS14,
		AgentVMSizeTypesStandardDS2,
		AgentVMSizeTypesStandardDS3,
		AgentVMSizeTypesStandardDS4,
		AgentVMSizeTypesStandardG1,
		AgentVMSizeTypesStandardG2,
		AgentVMSizeTypesStandardG3,
		AgentVMSizeTypesStandardG4,
		AgentVMSizeTypesStandardG5,
		AgentVMSizeTypesStandardGS1,
		AgentVMSizeTypesStandardGS2,
		AgentVMSizeTypesStandardGS3,
		AgentVMSizeTypesStandardGS4,
		AgentVMSizeTypesStandardGS5,
	}
}

// ClusterType - The cluster type.
type ClusterType string

const (
	ClusterTypeACS   ClusterType = "ACS"
	ClusterTypeLocal ClusterType = "Local"
)

// PossibleClusterTypeValues returns the possible values for the ClusterType const type.
func PossibleClusterTypeValues() []ClusterType {
	return []ClusterType{
		ClusterTypeACS,
		ClusterTypeLocal,
	}
}

// OperationStatus - The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
// Failed.
type OperationStatus string

const (
	OperationStatusCanceled  OperationStatus = "Canceled"
	OperationStatusCreating  OperationStatus = "Creating"
	OperationStatusDeleting  OperationStatus = "Deleting"
	OperationStatusFailed    OperationStatus = "Failed"
	OperationStatusSucceeded OperationStatus = "Succeeded"
	OperationStatusUnknown   OperationStatus = "Unknown"
	OperationStatusUpdating  OperationStatus = "Updating"
)

// PossibleOperationStatusValues returns the possible values for the OperationStatus const type.
func PossibleOperationStatusValues() []OperationStatus {
	return []OperationStatus{
		OperationStatusCanceled,
		OperationStatusCreating,
		OperationStatusDeleting,
		OperationStatusFailed,
		OperationStatusSucceeded,
		OperationStatusUnknown,
		OperationStatusUpdating,
	}
}

// OrchestratorType - Type of orchestrator. It cannot be changed once the cluster is created.
type OrchestratorType string

const (
	OrchestratorTypeKubernetes OrchestratorType = "Kubernetes"
	OrchestratorTypeNone       OrchestratorType = "None"
)

// PossibleOrchestratorTypeValues returns the possible values for the OrchestratorType const type.
func PossibleOrchestratorTypeValues() []OrchestratorType {
	return []OrchestratorType{
		OrchestratorTypeKubernetes,
		OrchestratorTypeNone,
	}
}

// Status - SSL status. Allowed values are Enabled and Disabled.
type Status string

const (
	StatusDisabled Status = "Disabled"
	StatusEnabled  Status = "Enabled"
)

// PossibleStatusValues returns the possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{
		StatusDisabled,
		StatusEnabled,
	}
}

// SystemServiceType - The system service type
type SystemServiceType string

const (
	SystemServiceTypeBatchFrontEnd   SystemServiceType = "BatchFrontEnd"
	SystemServiceTypeNone            SystemServiceType = "None"
	SystemServiceTypeScoringFrontEnd SystemServiceType = "ScoringFrontEnd"
)

// PossibleSystemServiceTypeValues returns the possible values for the SystemServiceType const type.
func PossibleSystemServiceTypeValues() []SystemServiceType {
	return []SystemServiceType{
		SystemServiceTypeBatchFrontEnd,
		SystemServiceTypeNone,
		SystemServiceTypeScoringFrontEnd,
	}
}

// UpdatesAvailable - Yes if updates are available for the system services, No if not.
type UpdatesAvailable string

const (
	UpdatesAvailableNo  UpdatesAvailable = "No"
	UpdatesAvailableYes UpdatesAvailable = "Yes"
)

// PossibleUpdatesAvailableValues returns the possible values for the UpdatesAvailable const type.
func PossibleUpdatesAvailableValues() []UpdatesAvailable {
	return []UpdatesAvailable{
		UpdatesAvailableNo,
		UpdatesAvailableYes,
	}
}
