//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armadp

import "time"

// Account - ADP account
type Account struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// List of account properties
	Properties *AccountProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system meta data relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccountCheckNameAvailabilityParameters - The parameters used to check the availability of the account name
type AccountCheckNameAvailabilityParameters struct {
	// REQUIRED; The account name
	Name *string `json:"name,omitempty"`

	// REQUIRED; The type of resource, Microsoft.AutonomousDevelopmentPlatform/accounts
	Type *Type `json:"type,omitempty"`
}

// AccountList - The list operation response, that contains the data pools and their properties
type AccountList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; List of accounts and their properties
	Value []*Account `json:"value,omitempty" azure:"ro"`
}

// AccountPatch - ADP account
type AccountPatch struct {
	// List of account properties
	Properties *AccountProperties `json:"properties,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`
}

// AccountProperties - ADP account properties
type AccountProperties struct {
	// READ-ONLY; The account's data-plane ID
	AccountID *string `json:"accountId,omitempty" azure:"ro"`

	// READ-ONLY; Gets the status of the account at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// AccountsClientBeginCreateOrUpdateOptions contains the optional parameters for the AccountsClient.BeginCreateOrUpdate method.
type AccountsClientBeginCreateOrUpdateOptions struct {
	// The parameters to provide for the ADP account
	Parameters *Account
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountsClientBeginDeleteOptions contains the optional parameters for the AccountsClient.BeginDelete method.
type AccountsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountsClientBeginUpdateOptions contains the optional parameters for the AccountsClient.BeginUpdate method.
type AccountsClientBeginUpdateOptions struct {
	// The parameters to provide for the current ADP account
	Parameters *AccountPatch
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountsClientCheckNameAvailabilityOptions contains the optional parameters for the AccountsClient.CheckNameAvailability
// method.
type AccountsClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientGetOptions contains the optional parameters for the AccountsClient.Get method.
type AccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListByResourceGroupOptions contains the optional parameters for the AccountsClient.ListByResourceGroup method.
type AccountsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListOptions contains the optional parameters for the AccountsClient.List method.
type AccountsClientListOptions struct {
	// placeholder for future optional parameters
}

// CheckNameAvailabilityResult - The checkNameAvailability operation response
type CheckNameAvailabilityResult struct {
	// READ-ONLY; Gets an error message explaining the reason value in more detail
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available.
	// If false, the name has already been taken or is invalid and cannot be used
	NameAvailable *bool `json:"nameAvailable,omitempty" azure:"ro"`

	// READ-ONLY; Gets the reason that an account name could not be used. The reason element is only returned if nameAvailable
	// is false
	Reason *CheckNameAvailabilityReason `json:"reason,omitempty" azure:"ro"`
}

// DataPool - ADP Data Pool
type DataPool struct {
	// List of data pool properties
	Properties *DataPoolProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system meta data relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DataPoolBaseProperties - Data Pool properties
type DataPoolBaseProperties struct {
	// Gets or sets the collection of locations where Data Pool resources should be created
	Locations []*DataPoolLocation `json:"locations,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The Data Pool's data-plane ID
	DataPoolID *string `json:"dataPoolId,omitempty" azure:"ro"`

	// READ-ONLY; Gets the status of the data pool at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// DataPoolEncryption - Encryption properties of a Data Pool
type DataPoolEncryption struct {
	// REQUIRED; The name of Key Vault key
	KeyName *string `json:"keyName,omitempty"`

	// REQUIRED; The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location
	KeyVaultURI *string `json:"keyVaultUri,omitempty"`

	// REQUIRED; The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires
	// access to the key operations get, wrap, unwrap, and recover
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty"`

	// The version of Key Vault key
	KeyVersion *string `json:"keyVersion,omitempty"`
}

// DataPoolList - The list operation response, that contains the data pools and their properties
type DataPoolList struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; List of data pools and their properties
	Value []*DataPool `json:"value,omitempty" azure:"ro"`
}

// DataPoolLocation - Location of a Data Pool
type DataPoolLocation struct {
	// REQUIRED; The location name
	Name *string `json:"name,omitempty"`

	// Encryption properties of a Data Pool location
	Encryption *DataPoolEncryption `json:"encryption,omitempty"`

	// The amount of storage accounts provisioned per Data Pool. Default: 5
	StorageAccountCount *int32 `json:"storageAccountCount,omitempty"`

	// The Storage SKU. Default: Standard_ZRS.
	StorageSKU *StorageSKU `json:"storageSku,omitempty"`
}

// DataPoolPatch - ADP Data Pool
type DataPoolPatch struct {
	// List of data pool properties
	Properties *DataPoolBaseProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The system meta data relating to this resource
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DataPoolProperties - Data Pool properties
type DataPoolProperties struct {
	// Gets or sets the collection of locations where Data Pool resources should be created
	Locations []*DataPoolLocation `json:"locations,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The Data Pool's data-plane ID
	DataPoolID *string `json:"dataPoolId,omitempty" azure:"ro"`

	// READ-ONLY; Gets the status of the data pool at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// DataPoolsClientBeginCreateOrUpdateOptions contains the optional parameters for the DataPoolsClient.BeginCreateOrUpdate
// method.
type DataPoolsClientBeginCreateOrUpdateOptions struct {
	// The parameters to provide for the Data Pool
	Parameters *DataPool
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DataPoolsClientBeginDeleteOptions contains the optional parameters for the DataPoolsClient.BeginDelete method.
type DataPoolsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DataPoolsClientBeginUpdateOptions contains the optional parameters for the DataPoolsClient.BeginUpdate method.
type DataPoolsClientBeginUpdateOptions struct {
	// The parameters to provide for the Data Pool
	Parameters *DataPoolPatch
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DataPoolsClientGetOptions contains the optional parameters for the DataPoolsClient.Get method.
type DataPoolsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DataPoolsClientListOptions contains the optional parameters for the DataPoolsClient.List method.
type DataPoolsClientListOptions struct {
	// placeholder for future optional parameters
}

// ErrorDefinition - Error definition
type ErrorDefinition struct {
	// READ-ONLY; Service specific error code which serves as the substatus for the HTTP error code
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Internal error details
	Details []*ErrorDefinition `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; Description of the error
	Message *string `json:"message,omitempty" azure:"ro"`
}

// ErrorResponse - Error response
type ErrorResponse struct {
	// The error details
	Error *ErrorDefinition `json:"error,omitempty"`
}

// Operation detail payload
type Operation struct {
	// Indicates the action type
	ActionType *string `json:"actionType,omitempty"`

	// Display of the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Name of the operation
	Name *string `json:"name,omitempty"`

	// Origin of the operation
	Origin *string `json:"origin,omitempty"`

	// Properties of the operation
	Properties *OperationProperties `json:"properties,omitempty"`
}

// OperationDisplay - Operation display payload
type OperationDisplay struct {
	// Localized friendly description for the operation
	Description *string `json:"description,omitempty"`

	// Localized friendly name for the operation
	Operation *string `json:"operation,omitempty"`

	// Resource provider of the operation
	Provider *string `json:"provider,omitempty"`

	// Resource of the operation
	Resource *string `json:"resource,omitempty"`
}

// OperationListResult - Available operations of the service
type OperationListResult struct {
	// URL to get the next set of operation list results if there are any
	NextLink *string `json:"nextLink,omitempty"`

	// List of operations supported by the Resource Provider
	Value []*Operation `json:"value,omitempty"`
}

// OperationLogSpecification - Details about an operation related to logs
type OperationLogSpecification struct {
	// Blobs created in the customer storage account, per hour
	BlobDuration *string `json:"blobDuration,omitempty"`

	// Localized display name
	DisplayName *string `json:"displayName,omitempty"`

	// The name of the log category
	Name *string `json:"name,omitempty"`
}

// OperationMetricAvailability - Defines how often data for a metric becomes available
type OperationMetricAvailability struct {
	// Blob created in the customer storage account, per hour
	BlobDuration *string `json:"blobDuration,omitempty"`

	// The granularity for the metric
	TimeGrain *string `json:"timeGrain,omitempty"`
}

// OperationMetricSpecification - Details about an operation related to metrics
type OperationMetricSpecification struct {
	// The type of metric aggregation
	AggregationType *string `json:"aggregationType,omitempty"`

	// Defines how often data for metrics becomes available
	Availabilities []*OperationMetricAvailability `json:"availabilities,omitempty"`

	// The description of the metric
	DisplayDescription *string `json:"displayDescription,omitempty"`

	// Localized display name of the metric
	DisplayName *string `json:"displayName,omitempty"`

	// Whether or not the service is using regional MDM accounts
	EnableRegionalMdmAccount *string `json:"enableRegionalMdmAccount,omitempty"`

	// The name of the metric
	Name *string `json:"name,omitempty"`

	// The name of the MDM account
	SourceMdmAccount *string `json:"sourceMdmAccount,omitempty"`

	// The name of the MDM namespace
	SourceMdmNamespace *string `json:"sourceMdmNamespace,omitempty"`

	// The unit that the metric is measured in
	Unit *string `json:"unit,omitempty"`
}

// OperationProperties - Additional details about an operation
type OperationProperties struct {
	// Details about a service operation
	ServiceSpecification *OperationServiceSpecification `json:"serviceSpecification,omitempty"`
}

// OperationServiceSpecification - Details about a service operation
type OperationServiceSpecification struct {
	// Details about operations related to logs
	LogSpecifications []*OperationLogSpecification `json:"logSpecifications,omitempty"`

	// Details about operations related to metrics
	MetricSpecifications []*OperationMetricSpecification `json:"metricSpecifications,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// StorageSKU - The Storage SKU.
type StorageSKU struct {
	// REQUIRED; The SKU name
	Name *StorageSKUName `json:"name,omitempty"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}
