//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armadp

const (
	moduleName    = "armadp"
	moduleVersion = "v0.1.0"
)

// CheckNameAvailabilityReason - Gets the reason that an account name could not be used. The reason element is only returned
// if nameAvailable is false
type CheckNameAvailabilityReason string

const (
	CheckNameAvailabilityReasonAlreadyExists CheckNameAvailabilityReason = "AlreadyExists"
	CheckNameAvailabilityReasonInvalid       CheckNameAvailabilityReason = "Invalid"
)

// PossibleCheckNameAvailabilityReasonValues returns the possible values for the CheckNameAvailabilityReason const type.
func PossibleCheckNameAvailabilityReasonValues() []CheckNameAvailabilityReason {
	return []CheckNameAvailabilityReason{
		CheckNameAvailabilityReasonAlreadyExists,
		CheckNameAvailabilityReasonInvalid,
	}
}

// ToPtr returns a *CheckNameAvailabilityReason pointing to the current value.
func (c CheckNameAvailabilityReason) ToPtr() *CheckNameAvailabilityReason {
	return &c
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// ToPtr returns a *CreatedByType pointing to the current value.
func (c CreatedByType) ToPtr() *CreatedByType {
	return &c
}

// ProvisioningState - Gets the status of the account at the time the operation was called
type ProvisioningState string

const (
	ProvisioningStateAccepted     ProvisioningState = "Accepted"
	ProvisioningStateCanceled     ProvisioningState = "Canceled"
	ProvisioningStateDeleting     ProvisioningState = "Deleting"
	ProvisioningStateFailed       ProvisioningState = "Failed"
	ProvisioningStateProvisioning ProvisioningState = "Provisioning"
	ProvisioningStateSucceeded    ProvisioningState = "Succeeded"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateAccepted,
		ProvisioningStateCanceled,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateProvisioning,
		ProvisioningStateSucceeded,
	}
}

// ToPtr returns a *ProvisioningState pointing to the current value.
func (c ProvisioningState) ToPtr() *ProvisioningState {
	return &c
}

// StorageSKUName - The SKU name
type StorageSKUName string

const (
	StorageSKUNamePremiumLRS     StorageSKUName = "Premium_LRS"
	StorageSKUNamePremiumZRS     StorageSKUName = "Premium_ZRS"
	StorageSKUNameStandardGRS    StorageSKUName = "Standard_GRS"
	StorageSKUNameStandardGzrs   StorageSKUName = "Standard_Gzrs"
	StorageSKUNameStandardLRS    StorageSKUName = "Standard_LRS"
	StorageSKUNameStandardRagrs  StorageSKUName = "Standard_Ragrs"
	StorageSKUNameStandardRagzrs StorageSKUName = "Standard_Ragzrs"
	StorageSKUNameStandardZRS    StorageSKUName = "Standard_ZRS"
)

// PossibleStorageSKUNameValues returns the possible values for the StorageSKUName const type.
func PossibleStorageSKUNameValues() []StorageSKUName {
	return []StorageSKUName{
		StorageSKUNamePremiumLRS,
		StorageSKUNamePremiumZRS,
		StorageSKUNameStandardGRS,
		StorageSKUNameStandardGzrs,
		StorageSKUNameStandardLRS,
		StorageSKUNameStandardRagrs,
		StorageSKUNameStandardRagzrs,
		StorageSKUNameStandardZRS,
	}
}

// ToPtr returns a *StorageSKUName pointing to the current value.
func (c StorageSKUName) ToPtr() *StorageSKUName {
	return &c
}

// Type - The type of resource, Microsoft.AutonomousDevelopmentPlatform/accounts
type Type string

const (
	TypeMicrosoftAutonomousDevelopmentPlatformAccounts Type = "Microsoft.AutonomousDevelopmentPlatform/accounts"
)

// PossibleTypeValues returns the possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{
		TypeMicrosoftAutonomousDevelopmentPlatformAccounts,
	}
}

// ToPtr returns a *Type pointing to the current value.
func (c Type) ToPtr() *Type {
	return &c
}
