//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsecurityinsight_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/securityinsight/armsecurityinsight"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/automationRules/GetAllAutomationRules.json
func ExampleAutomationRulesClient_List() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewAutomationRulesClient("<subscription-id>", cred, nil)
	pager := client.List("<resource-group-name>",
		"<workspace-name>",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/automationRules/GetAutomationRule.json
func ExampleAutomationRulesClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewAutomationRulesClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<automation-rule-id>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/automationRules/CreateAutomationRule.json
func ExampleAutomationRulesClient_CreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewAutomationRulesClient("<subscription-id>", cred, nil)
	res, err := client.CreateOrUpdate(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<automation-rule-id>",
		armsecurityinsight.AutomationRule{
			Etag: to.Ptr("<etag>"),
			Properties: &armsecurityinsight.AutomationRuleProperties{
				Actions: []armsecurityinsight.AutomationRuleActionClassification{
					&armsecurityinsight.AutomationRuleModifyPropertiesAction{
						ActionType: to.Ptr(armsecurityinsight.AutomationRuleActionTypeModifyProperties),
						Order:      to.Ptr[int32](1),
						ActionConfiguration: &armsecurityinsight.AutomationRuleModifyPropertiesActionConfiguration{
							Severity: to.Ptr(armsecurityinsight.IncidentSeverityHigh),
						},
					},
					&armsecurityinsight.AutomationRuleRunPlaybookAction{
						ActionType: to.Ptr(armsecurityinsight.AutomationRuleActionTypeRunPlaybook),
						Order:      to.Ptr[int32](2),
						ActionConfiguration: &armsecurityinsight.AutomationRuleRunPlaybookActionConfiguration{
							LogicAppResourceID: to.Ptr("<logic-app-resource-id>"),
							TenantID:           to.Ptr("<tenant-id>"),
						},
					}},
				DisplayName: to.Ptr("<display-name>"),
				Order:       to.Ptr[int32](1),
				TriggeringLogic: &armsecurityinsight.AutomationRuleTriggeringLogic{
					Conditions: []armsecurityinsight.AutomationRuleConditionClassification{
						&armsecurityinsight.AutomationRulePropertyValuesCondition{
							ConditionType: to.Ptr(armsecurityinsight.AutomationRuleConditionTypeProperty),
							ConditionProperties: &armsecurityinsight.AutomationRulePropertyValuesConditionProperties{
								Operator:     to.Ptr(armsecurityinsight.AutomationRulePropertyConditionSupportedOperatorContains),
								PropertyName: to.Ptr(armsecurityinsight.AutomationRulePropertyConditionSupportedPropertyIncidentRelatedAnalyticRuleIDs),
								PropertyValues: []*string{
									to.Ptr("/subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace/providers/Microsoft.SecurityInsights/alertRules/fab3d2d4-747f-46a7-8ef0-9c0be8112bf7"),
									to.Ptr("/subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace/providers/Microsoft.SecurityInsights/alertRules/8deb8303-e94d-46ff-96e0-5fd94b33df1a")},
							},
						}},
					IsEnabled:    to.Ptr(true),
					TriggersOn:   to.Ptr(armsecurityinsight.TriggersOnIncidents),
					TriggersWhen: to.Ptr(armsecurityinsight.TriggersWhenCreated),
				},
			},
		},
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/automationRules/DeleteAutomationRule.json
func ExampleAutomationRulesClient_Delete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewAutomationRulesClient("<subscription-id>", cred, nil)
	_, err = client.Delete(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<automation-rule-id>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
}
