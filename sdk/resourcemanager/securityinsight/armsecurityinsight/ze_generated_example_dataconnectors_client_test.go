//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsecurityinsight_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/securityinsight/armsecurityinsight"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/dataConnectors/GetDataConnectors.json
func ExampleDataConnectorsClient_List() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewDataConnectorsClient("<subscription-id>", cred, nil)
	pager := client.List("<resource-group-name>",
		"<workspace-name>",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/dataConnectors/GetAPIPolling.json
func ExampleDataConnectorsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewDataConnectorsClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<data-connector-id>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/dataConnectors/CreateAPIPolling.json
func ExampleDataConnectorsClient_CreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewDataConnectorsClient("<subscription-id>", cred, nil)
	res, err := client.CreateOrUpdate(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<data-connector-id>",
		&armsecurityinsight.CodelessAPIPollingDataConnector{
			Kind: to.Ptr(armsecurityinsight.DataConnectorKindAPIPolling),
			Properties: &armsecurityinsight.APIPollingParameters{
				ConnectorUIConfig: &armsecurityinsight.CodelessUIConnectorConfigProperties{
					Availability: &armsecurityinsight.Availability{
						IsPreview: to.Ptr(true),
						Status:    to.Ptr[int32](1),
					},
					ConnectivityCriteria: []*armsecurityinsight.CodelessUIConnectorConfigPropertiesConnectivityCriteriaItem{
						{
							Type:  to.Ptr(armsecurityinsight.ConnectivityType("SentinelKindsV2")),
							Value: []*string{},
						}},
					DataTypes: []*armsecurityinsight.CodelessUIConnectorConfigPropertiesDataTypesItem{
						{
							Name:                  to.Ptr("<name>"),
							LastDataReceivedQuery: to.Ptr("<last-data-received-query>"),
						}},
					DescriptionMarkdown: to.Ptr("<description-markdown>"),
					GraphQueries: []*armsecurityinsight.CodelessUIConnectorConfigPropertiesGraphQueriesItem{
						{
							BaseQuery:  to.Ptr("<base-query>"),
							Legend:     to.Ptr("<legend>"),
							MetricName: to.Ptr("<metric-name>"),
						}},
					GraphQueriesTableName: to.Ptr("<graph-queries-table-name>"),
					InstructionSteps: []*armsecurityinsight.CodelessUIConnectorConfigPropertiesInstructionStepsItem{
						{
							Description: to.Ptr("<description>"),
							Instructions: []*armsecurityinsight.InstructionStepsInstructionsItem{
								{
									Type: to.Ptr(armsecurityinsight.SettingType("APIKey")),
									Parameters: map[string]interface{}{
										"enable": "true",
										"userRequestPlaceHoldersInput": []interface{}{
											map[string]interface{}{
												"displayText":      "Organization Name",
												"placeHolderName":  "{{placeHolder1}}",
												"placeHolderValue": "",
												"requestObjectKey": "apiEndpoint",
											},
										},
									},
								}},
							Title: to.Ptr("<title>"),
						}},
					Permissions: &armsecurityinsight.Permissions{
						Customs: []*armsecurityinsight.PermissionsCustomsItem{
							{
								Name:        to.Ptr("<name>"),
								Description: to.Ptr("<description>"),
							}},
						ResourceProvider: []*armsecurityinsight.PermissionsResourceProviderItem{
							{
								PermissionsDisplayText: to.Ptr("<permissions-display-text>"),
								Provider:               to.Ptr(armsecurityinsight.ProviderNameMicrosoftOperationalInsightsWorkspaces),
								ProviderDisplayName:    to.Ptr("<provider-display-name>"),
								RequiredPermissions: &armsecurityinsight.RequiredPermissions{
									Delete: to.Ptr(true),
									Read:   to.Ptr(true),
									Write:  to.Ptr(true),
								},
								Scope: to.Ptr(armsecurityinsight.PermissionProviderScopeWorkspace),
							}},
					},
					Publisher: to.Ptr("<publisher>"),
					SampleQueries: []*armsecurityinsight.CodelessUIConnectorConfigPropertiesSampleQueriesItem{
						{
							Description: to.Ptr("<description>"),
							Query:       to.Ptr("<query>"),
						}},
					Title: to.Ptr("<title>"),
				},
				PollingConfig: &armsecurityinsight.CodelessConnectorPollingConfigProperties{
					Auth: &armsecurityinsight.CodelessConnectorPollingAuthProperties{
						APIKeyIdentifier: to.Ptr("<apikey-identifier>"),
						APIKeyName:       to.Ptr("<apikey-name>"),
						AuthType:         to.Ptr("<auth-type>"),
					},
					Paging: &armsecurityinsight.CodelessConnectorPollingPagingProperties{
						PageSizeParaName: to.Ptr("<page-size-para-name>"),
						PagingType:       to.Ptr("<paging-type>"),
					},
					Response: &armsecurityinsight.CodelessConnectorPollingResponseProperties{
						EventsJSONPaths: []*string{
							to.Ptr("$")},
					},
					Request: &armsecurityinsight.CodelessConnectorPollingRequestProperties{
						APIEndpoint: to.Ptr("<apiendpoint>"),
						Headers: map[string]interface{}{
							"Accept":     "application/json",
							"User-Agent": "Scuba",
						},
						HTTPMethod: to.Ptr("<httpmethod>"),
						QueryParameters: map[string]interface{}{
							"phrase": "created:{_QueryWindowStartTime}..{_QueryWindowEndTime}",
						},
						QueryTimeFormat:  to.Ptr("<query-time-format>"),
						QueryWindowInMin: to.Ptr[int32](15),
						RateLimitQPS:     to.Ptr[int32](50),
						RetryCount:       to.Ptr[int32](2),
						TimeoutInSeconds: to.Ptr[int32](60),
					},
				},
			},
		},
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/dataConnectors/DeleteAPIPolling.json
func ExampleDataConnectorsClient_Delete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewDataConnectorsClient("<subscription-id>", cred, nil)
	_, err = client.Delete(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<data-connector-id>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/dataConnectors/ConnectAPIPolling.json
func ExampleDataConnectorsClient_Connect() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewDataConnectorsClient("<subscription-id>", cred, nil)
	_, err = client.Connect(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<data-connector-id>",
		armsecurityinsight.DataConnectorConnectBody{
			APIKey: to.Ptr("<apikey>"),
			Kind:   to.Ptr(armsecurityinsight.ConnectAuthKindAPIKey),
			RequestConfigUserInputValues: []interface{}{
				map[string]interface{}{
					"displayText":      "Organization Name",
					"placeHolderName":  "{{placeHolder1}}",
					"placeHolderValue": "somePlaceHolderValue",
					"requestObjectKey": "apiEndpoint",
				}},
		},
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2021-09-01-preview/examples/dataConnectors/DisconnectAPIPolling.json
func ExampleDataConnectorsClient_Disconnect() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityinsight.NewDataConnectorsClient("<subscription-id>", cred, nil)
	_, err = client.Disconnect(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		"<data-connector-id>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
}
