//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armvideoindexer_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/videoindexer/armvideoindexer"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vi/resource-manager/Microsoft.VideoIndexer/preview/2021-11-10-preview/examples/ViAccountCheckNameAvailabilityFree.json
func ExampleAccountsClient_CheckNameAvailability() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armvideoindexer.NewAccountsClient("<subscription-id>", cred, nil)
	res, err := client.CheckNameAvailability(ctx,
		armvideoindexer.AccountCheckNameAvailabilityParameters{
			Name: to.Ptr("<name>"),
			Type: to.Ptr(armvideoindexer.TypeMicrosoftVideoIndexerAccounts),
		},
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vi/resource-manager/Microsoft.VideoIndexer/preview/2021-11-10-preview/examples/ViAccountsList.json
func ExampleAccountsClient_List() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armvideoindexer.NewAccountsClient("<subscription-id>", cred, nil)
	pager := client.List(nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vi/resource-manager/Microsoft.VideoIndexer/preview/2021-11-10-preview/examples/ViAccountsListByResourceGroup.json
func ExampleAccountsClient_ListByResourceGroup() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armvideoindexer.NewAccountsClient("<subscription-id>", cred, nil)
	pager := client.ListByResourceGroup("<resource-group-name>",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vi/resource-manager/Microsoft.VideoIndexer/preview/2021-11-10-preview/examples/ViAccountGet.json
func ExampleAccountsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armvideoindexer.NewAccountsClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<account-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vi/resource-manager/Microsoft.VideoIndexer/preview/2021-11-10-preview/examples/ViAccountPatch/ViAccountPatch1.json
func ExampleAccountsClient_Update() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armvideoindexer.NewAccountsClient("<subscription-id>", cred, nil)
	res, err := client.Update(ctx,
		"<resource-group-name>",
		"<account-name>",
		&armvideoindexer.AccountsClientUpdateOptions{Parameters: &armvideoindexer.AccountPatch{
			Identity: &armvideoindexer.ManagedServiceIdentity{
				Type: to.Ptr(armvideoindexer.ManagedServiceIdentityTypeUserAssigned),
				UserAssignedIdentities: map[string]*armvideoindexer.UserAssignedIdentity{
					"/subscriptions/xxx/resourceGroups/contoso-videoanalyzer-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-videoanalyzer-mi": {},
				},
			},
			Properties: &armvideoindexer.AccountPropertiesForPatchRequest{
				MediaServices: &armvideoindexer.MediaServicesForPatchRequest{
					UserAssignedIdentity: to.Ptr("<user-assigned-identity>"),
				},
			},
		},
		})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vi/resource-manager/Microsoft.VideoIndexer/preview/2021-11-10-preview/examples/ViAccountPut/ViAccountPut1.json
func ExampleAccountsClient_CreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armvideoindexer.NewAccountsClient("<subscription-id>", cred, nil)
	res, err := client.CreateOrUpdate(ctx,
		"<resource-group-name>",
		"<account-name>",
		&armvideoindexer.AccountsClientCreateOrUpdateOptions{Parameters: &armvideoindexer.Account{
			Location: to.Ptr("<location>"),
			Identity: &armvideoindexer.ManagedServiceIdentity{
				Type: to.Ptr(armvideoindexer.ManagedServiceIdentityTypeUserAssigned),
				UserAssignedIdentities: map[string]*armvideoindexer.UserAssignedIdentity{
					"/subscriptions/xxx/resourceGroups/contoso-videoanalyzer-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-videoanalyzer-mi": {},
				},
			},
			Properties: &armvideoindexer.AccountPropertiesForPutRequest{
				MediaServices: &armvideoindexer.MediaServicesForPutRequest{
					ResourceID:           to.Ptr("<resource-id>"),
					UserAssignedIdentity: to.Ptr("<user-assigned-identity>"),
				},
			},
		},
		})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vi/resource-manager/Microsoft.VideoIndexer/preview/2021-11-10-preview/examples/ViAccountDelete.json
func ExampleAccountsClient_Delete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armvideoindexer.NewAccountsClient("<subscription-id>", cred, nil)
	_, err = client.Delete(ctx,
		"<resource-group-name>",
		"<account-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
}
