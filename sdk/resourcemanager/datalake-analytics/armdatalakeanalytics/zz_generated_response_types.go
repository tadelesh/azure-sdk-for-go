//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdatalakeanalytics

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"time"
)

// AccountsClientCheckNameAvailabilityResponse contains the response from method AccountsClient.CheckNameAvailability.
type AccountsClientCheckNameAvailabilityResponse struct {
	NameAvailabilityInformation
}

// AccountsClientCreatePollerResponse contains the response from method AccountsClient.Create.
type AccountsClientCreatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AccountsClientCreatePoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AccountsClientCreatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AccountsClientCreateResponse, error) {
	respType := AccountsClientCreateResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.Account)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a AccountsClientCreatePollerResponse from the provided client and resume token.
func (l *AccountsClientCreatePollerResponse) Resume(ctx context.Context, client *AccountsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AccountsClient.Create", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AccountsClientCreatePoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// AccountsClientCreateResponse contains the response from method AccountsClient.Create.
type AccountsClientCreateResponse struct {
	Account
}

// AccountsClientDeletePollerResponse contains the response from method AccountsClient.Delete.
type AccountsClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AccountsClientDeletePoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AccountsClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AccountsClientDeleteResponse, error) {
	respType := AccountsClientDeleteResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a AccountsClientDeletePollerResponse from the provided client and resume token.
func (l *AccountsClientDeletePollerResponse) Resume(ctx context.Context, client *AccountsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AccountsClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AccountsClientDeletePoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// AccountsClientDeleteResponse contains the response from method AccountsClient.Delete.
type AccountsClientDeleteResponse struct {
	// placeholder for future response values
}

// AccountsClientGetResponse contains the response from method AccountsClient.Get.
type AccountsClientGetResponse struct {
	Account
}

// AccountsClientListByResourceGroupResponse contains the response from method AccountsClient.ListByResourceGroup.
type AccountsClientListByResourceGroupResponse struct {
	AccountListResult
}

// AccountsClientListResponse contains the response from method AccountsClient.List.
type AccountsClientListResponse struct {
	AccountListResult
}

// AccountsClientUpdatePollerResponse contains the response from method AccountsClient.Update.
type AccountsClientUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AccountsClientUpdatePoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AccountsClientUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AccountsClientUpdateResponse, error) {
	respType := AccountsClientUpdateResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.Account)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a AccountsClientUpdatePollerResponse from the provided client and resume token.
func (l *AccountsClientUpdatePollerResponse) Resume(ctx context.Context, client *AccountsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AccountsClient.Update", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AccountsClientUpdatePoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// AccountsClientUpdateResponse contains the response from method AccountsClient.Update.
type AccountsClientUpdateResponse struct {
	Account
}

// ComputePoliciesClientCreateOrUpdateResponse contains the response from method ComputePoliciesClient.CreateOrUpdate.
type ComputePoliciesClientCreateOrUpdateResponse struct {
	ComputePolicy
}

// ComputePoliciesClientDeleteResponse contains the response from method ComputePoliciesClient.Delete.
type ComputePoliciesClientDeleteResponse struct {
	// placeholder for future response values
}

// ComputePoliciesClientGetResponse contains the response from method ComputePoliciesClient.Get.
type ComputePoliciesClientGetResponse struct {
	ComputePolicy
}

// ComputePoliciesClientListByAccountResponse contains the response from method ComputePoliciesClient.ListByAccount.
type ComputePoliciesClientListByAccountResponse struct {
	ComputePolicyListResult
}

// ComputePoliciesClientUpdateResponse contains the response from method ComputePoliciesClient.Update.
type ComputePoliciesClientUpdateResponse struct {
	ComputePolicy
}

// DataLakeStoreAccountsClientAddResponse contains the response from method DataLakeStoreAccountsClient.Add.
type DataLakeStoreAccountsClientAddResponse struct {
	// placeholder for future response values
}

// DataLakeStoreAccountsClientDeleteResponse contains the response from method DataLakeStoreAccountsClient.Delete.
type DataLakeStoreAccountsClientDeleteResponse struct {
	// placeholder for future response values
}

// DataLakeStoreAccountsClientGetResponse contains the response from method DataLakeStoreAccountsClient.Get.
type DataLakeStoreAccountsClientGetResponse struct {
	DataLakeStoreAccountInformation
}

// DataLakeStoreAccountsClientListByAccountResponse contains the response from method DataLakeStoreAccountsClient.ListByAccount.
type DataLakeStoreAccountsClientListByAccountResponse struct {
	DataLakeStoreAccountInformationListResult
}

// FirewallRulesClientCreateOrUpdateResponse contains the response from method FirewallRulesClient.CreateOrUpdate.
type FirewallRulesClientCreateOrUpdateResponse struct {
	FirewallRule
}

// FirewallRulesClientDeleteResponse contains the response from method FirewallRulesClient.Delete.
type FirewallRulesClientDeleteResponse struct {
	// placeholder for future response values
}

// FirewallRulesClientGetResponse contains the response from method FirewallRulesClient.Get.
type FirewallRulesClientGetResponse struct {
	FirewallRule
}

// FirewallRulesClientListByAccountResponse contains the response from method FirewallRulesClient.ListByAccount.
type FirewallRulesClientListByAccountResponse struct {
	FirewallRuleListResult
}

// FirewallRulesClientUpdateResponse contains the response from method FirewallRulesClient.Update.
type FirewallRulesClientUpdateResponse struct {
	FirewallRule
}

// LocationsClientGetCapabilityResponse contains the response from method LocationsClient.GetCapability.
type LocationsClientGetCapabilityResponse struct {
	CapabilityInformation
}

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationListResult
}

// StorageAccountsClientAddResponse contains the response from method StorageAccountsClient.Add.
type StorageAccountsClientAddResponse struct {
	// placeholder for future response values
}

// StorageAccountsClientDeleteResponse contains the response from method StorageAccountsClient.Delete.
type StorageAccountsClientDeleteResponse struct {
	// placeholder for future response values
}

// StorageAccountsClientGetResponse contains the response from method StorageAccountsClient.Get.
type StorageAccountsClientGetResponse struct {
	StorageAccountInformation
}

// StorageAccountsClientGetStorageContainerResponse contains the response from method StorageAccountsClient.GetStorageContainer.
type StorageAccountsClientGetStorageContainerResponse struct {
	StorageContainer
}

// StorageAccountsClientListByAccountResponse contains the response from method StorageAccountsClient.ListByAccount.
type StorageAccountsClientListByAccountResponse struct {
	StorageAccountInformationListResult
}

// StorageAccountsClientListSasTokensResponse contains the response from method StorageAccountsClient.ListSasTokens.
type StorageAccountsClientListSasTokensResponse struct {
	SasTokenInformationListResult
}

// StorageAccountsClientListStorageContainersResponse contains the response from method StorageAccountsClient.ListStorageContainers.
type StorageAccountsClientListStorageContainersResponse struct {
	StorageContainerListResult
}

// StorageAccountsClientUpdateResponse contains the response from method StorageAccountsClient.Update.
type StorageAccountsClientUpdateResponse struct {
	// placeholder for future response values
}
