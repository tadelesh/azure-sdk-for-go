//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcompute_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateOrUpdateACapacityReservation.json
func ExampleCapacityReservationsClient_BeginCreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	capacityReservationsClient, err := armcompute.NewCapacityReservationsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	capacityReservationsClientCreateOrUpdateResponsePoller, err := capacityReservationsClient.BeginCreateOrUpdate(ctx,
		"<resource-group-name>",
		"<capacity-reservation-group-name>",
		"<capacity-reservation-name>",
		armcompute.CapacityReservation{
			Location: to.Ptr("<resource-location>"),
			Tags: map[string]*string{
				"department": to.Ptr("HR"),
			},
			SKU: &armcompute.SKU{
				Name:     to.Ptr("<the-sku-name.>"),
				Capacity: to.Ptr[int64](4),
			},
			Zones: []*string{
				to.Ptr("1")},
		},
		&armcompute.CapacityReservationsClientBeginCreateOrUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	capacityReservationsClientCreateOrUpdateResponse, err := capacityReservationsClientCreateOrUpdateResponsePoller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// TODO: use response item
	_ = capacityReservationsClientCreateOrUpdateResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CapacityReservations_Update_MaximumSet_Gen.json
func ExampleCapacityReservationsClient_BeginUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	capacityReservationsClient, err := armcompute.NewCapacityReservationsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	capacityReservationsClientUpdateResponsePoller, err := capacityReservationsClient.BeginUpdate(ctx,
		"<resource-group-name>",
		"<capacity-reservation-group-name>",
		"<capacity-reservation-name>",
		armcompute.CapacityReservationUpdate{
			Tags: map[string]*string{
				"key4974": to.Ptr("aaaaaaaaaaaaaaaa"),
			},
			Properties: &armcompute.CapacityReservationProperties{
				InstanceView: &armcompute.CapacityReservationInstanceView{
					Statuses: []*armcompute.InstanceViewStatus{
						{
							Code:          to.Ptr("<the-status-code.>"),
							DisplayStatus: to.Ptr("<the-short-localizable-label-for-the-status.>"),
							Level:         to.Ptr(armcompute.StatusLevelTypesInfo),
							Message:       to.Ptr("<the-detailed-status-message,-including-for-alerts-and-error-messages.>"),
							Time:          to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2021-11-30T12:58:26.522Z"); return t }()),
						}},
					UtilizationInfo: &armcompute.CapacityReservationUtilization{},
				},
			},
			SKU: &armcompute.SKU{
				Name:     to.Ptr("<the-sku-name.>"),
				Capacity: to.Ptr[int64](7),
				Tier:     to.Ptr("<specifies-the-tier-of-virtual-machines-in-a-scale-set.<br-/><br-/>-possible-values:<br-/><br-/>-**standard**<br-/><br-/>-**basic**>"),
			},
		},
		&armcompute.CapacityReservationsClientBeginUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	capacityReservationsClientUpdateResponse, err := capacityReservationsClientUpdateResponsePoller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// TODO: use response item
	_ = capacityReservationsClientUpdateResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CapacityReservations_Delete_MaximumSet_Gen.json
func ExampleCapacityReservationsClient_BeginDelete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	capacityReservationsClient, err := armcompute.NewCapacityReservationsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	capacityReservationsClientDeleteResponsePoller, err := capacityReservationsClient.BeginDelete(ctx,
		"<resource-group-name>",
		"<capacity-reservation-group-name>",
		"<capacity-reservation-name>",
		&armcompute.CapacityReservationsClientBeginDeleteOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = capacityReservationsClientDeleteResponsePoller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/GetACapacityReservation.json
func ExampleCapacityReservationsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	capacityReservationsClient, err := armcompute.NewCapacityReservationsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	capacityReservationsClientGetResponse, err := capacityReservationsClient.Get(ctx,
		"<resource-group-name>",
		"<capacity-reservation-group-name>",
		"<capacity-reservation-name>",
		&armcompute.CapacityReservationsClientGetOptions{Expand: nil})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// TODO: use response item
	_ = capacityReservationsClientGetResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/ListCapacityReservationsInReservationGroup.json
func ExampleCapacityReservationsClient_NewListByCapacityReservationGroupPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	capacityReservationsClient, err := armcompute.NewCapacityReservationsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	capacityReservationsClientNewListByCapacityReservationGroupPager := capacityReservationsClient.NewListByCapacityReservationGroupPager("<resource-group-name>",
		"<capacity-reservation-group-name>",
		nil)
	for capacityReservationsClientNewListByCapacityReservationGroupPager.More() {
		nextResult, err := capacityReservationsClientNewListByCapacityReservationGroupPager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}
