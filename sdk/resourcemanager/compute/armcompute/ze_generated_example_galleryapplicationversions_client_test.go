//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcompute_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/CreateOrUpdateASimpleGalleryApplicationVersion.json
func ExampleGalleryApplicationVersionsClient_BeginCreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	galleryApplicationVersionsClient, err := armcompute.NewGalleryApplicationVersionsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	galleryApplicationVersionsClientCreateOrUpdateResponsePoller, err := galleryApplicationVersionsClient.BeginCreateOrUpdate(ctx,
		"<resource-group-name>",
		"<gallery-name>",
		"<gallery-application-name>",
		"<gallery-application-version-name>",
		armcompute.GalleryApplicationVersion{
			Location: to.Ptr("<resource-location>"),
			Properties: &armcompute.GalleryApplicationVersionProperties{
				PublishingProfile: &armcompute.GalleryApplicationVersionPublishingProfile{
					EndOfLifeDate:      to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-07-01T07:00:00Z"); return t }()),
					ReplicaCount:       to.Ptr[int32](1),
					StorageAccountType: to.Ptr(armcompute.StorageAccountTypeStandardLRS),
					TargetRegions: []*armcompute.TargetRegion{
						{
							Name:                 to.Ptr("<the-name-of-the-region.>"),
							RegionalReplicaCount: to.Ptr[int32](1),
							StorageAccountType:   to.Ptr(armcompute.StorageAccountTypeStandardLRS),
						}},
					ManageActions: &armcompute.UserArtifactManage{
						Install: to.Ptr("<required.-the-path-and-arguments-to-install-the-gallery-application.-this-is-limited-to-4096-characters.>"),
						Remove:  to.Ptr("<required.-the-path-and-arguments-to-remove-the-gallery-application.-this-is-limited-to-4096-characters.>"),
					},
					Source: &armcompute.UserArtifactSource{
						MediaLink: to.Ptr("<required.-the-media-link-of-the-artifact,-must-be-a-readable-storage-page-blob.>"),
					},
				},
			},
		},
		&armcompute.GalleryApplicationVersionsClientBeginCreateOrUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	galleryApplicationVersionsClientCreateOrUpdateResponse, err := galleryApplicationVersionsClientCreateOrUpdateResponsePoller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// TODO: use response item
	_ = galleryApplicationVersionsClientCreateOrUpdateResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/UpdateASimpleGalleryApplicationVersion.json
func ExampleGalleryApplicationVersionsClient_BeginUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	galleryApplicationVersionsClient, err := armcompute.NewGalleryApplicationVersionsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	galleryApplicationVersionsClientUpdateResponsePoller, err := galleryApplicationVersionsClient.BeginUpdate(ctx,
		"<resource-group-name>",
		"<gallery-name>",
		"<gallery-application-name>",
		"<gallery-application-version-name>",
		armcompute.GalleryApplicationVersionUpdate{
			Properties: &armcompute.GalleryApplicationVersionProperties{
				PublishingProfile: &armcompute.GalleryApplicationVersionPublishingProfile{
					EndOfLifeDate:      to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-07-01T07:00:00Z"); return t }()),
					ReplicaCount:       to.Ptr[int32](1),
					StorageAccountType: to.Ptr(armcompute.StorageAccountTypeStandardLRS),
					TargetRegions: []*armcompute.TargetRegion{
						{
							Name:                 to.Ptr("<the-name-of-the-region.>"),
							RegionalReplicaCount: to.Ptr[int32](1),
							StorageAccountType:   to.Ptr(armcompute.StorageAccountTypeStandardLRS),
						}},
					ManageActions: &armcompute.UserArtifactManage{
						Install: to.Ptr("<required.-the-path-and-arguments-to-install-the-gallery-application.-this-is-limited-to-4096-characters.>"),
						Remove:  to.Ptr("<required.-the-path-and-arguments-to-remove-the-gallery-application.-this-is-limited-to-4096-characters.>"),
					},
					Source: &armcompute.UserArtifactSource{
						MediaLink: to.Ptr("<required.-the-media-link-of-the-artifact,-must-be-a-readable-storage-page-blob.>"),
					},
				},
			},
		},
		&armcompute.GalleryApplicationVersionsClientBeginUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	galleryApplicationVersionsClientUpdateResponse, err := galleryApplicationVersionsClientUpdateResponsePoller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// TODO: use response item
	_ = galleryApplicationVersionsClientUpdateResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/GetAGalleryApplicationVersionWithReplicationStatus.json
func ExampleGalleryApplicationVersionsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	galleryApplicationVersionsClient, err := armcompute.NewGalleryApplicationVersionsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	galleryApplicationVersionsClientGetResponse, err := galleryApplicationVersionsClient.Get(ctx,
		"<resource-group-name>",
		"<gallery-name>",
		"<gallery-application-name>",
		"<gallery-application-version-name>",
		&armcompute.GalleryApplicationVersionsClientGetOptions{Expand: to.Ptr(armcompute.ReplicationStatusTypesReplicationStatus)})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// TODO: use response item
	_ = galleryApplicationVersionsClientGetResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/DeleteAGalleryApplicationVersion.json
func ExampleGalleryApplicationVersionsClient_BeginDelete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	galleryApplicationVersionsClient, err := armcompute.NewGalleryApplicationVersionsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	galleryApplicationVersionsClientDeleteResponsePoller, err := galleryApplicationVersionsClient.BeginDelete(ctx,
		"<resource-group-name>",
		"<gallery-name>",
		"<gallery-application-name>",
		"<gallery-application-version-name>",
		&armcompute.GalleryApplicationVersionsClientBeginDeleteOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = galleryApplicationVersionsClientDeleteResponsePoller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-10-01/examples/gallery/ListGalleryApplicationVersionsInAGalleryApplication.json
func ExampleGalleryApplicationVersionsClient_NewListByGalleryApplicationPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	galleryApplicationVersionsClient, err := armcompute.NewGalleryApplicationVersionsClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	galleryApplicationVersionsClientNewListByGalleryApplicationPager := galleryApplicationVersionsClient.NewListByGalleryApplicationPager("<resource-group-name>",
		"<gallery-name>",
		"<gallery-application-name>",
		nil)
	for galleryApplicationVersionsClientNewListByGalleryApplicationPager.More() {
		nextResult, err := galleryApplicationVersionsClientNewListByGalleryApplicationPager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}
