//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcompute_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/SshPublicKeys_ListBySubscription_MaximumSet_Gen.json
func ExampleSSHPublicKeysClient_NewListBySubscriptionPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	sSHPublicKeysClient, err := armcompute.NewSSHPublicKeysClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	sSHPublicKeysClientNewListBySubscriptionPager := sSHPublicKeysClient.NewListBySubscriptionPager(nil)
	for sSHPublicKeysClientNewListBySubscriptionPager.More() {
		nextResult, err := sSHPublicKeysClientNewListBySubscriptionPager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/SshPublicKeys_ListByResourceGroup_MaximumSet_Gen.json
func ExampleSSHPublicKeysClient_NewListByResourceGroupPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	sSHPublicKeysClient, err := armcompute.NewSSHPublicKeysClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	sSHPublicKeysClientNewListByResourceGroupPager := sSHPublicKeysClient.NewListByResourceGroupPager("<resource-group-name>",
		nil)
	for sSHPublicKeysClientNewListByResourceGroupPager.More() {
		nextResult, err := sSHPublicKeysClientNewListByResourceGroupPager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAnSshPublicKey.json
func ExampleSSHPublicKeysClient_Create() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	sSHPublicKeysClient, err := armcompute.NewSSHPublicKeysClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	sSHPublicKeysClientCreateResponse, err := sSHPublicKeysClient.Create(ctx,
		"<resource-group-name>",
		"<ssh-public-key-name>",
		armcompute.SSHPublicKeyResource{
			Location: to.Ptr("<resource-location>"),
			Properties: &armcompute.SSHPublicKeyResourceProperties{
				PublicKey: to.Ptr("<ssh-public-key-used-to-authenticate-to-a-virtual-machine-through-ssh.-if-this-property-is-not-initially-provided-when-the-resource-is-created,-the-public-key-property-will-be-populated-when-generate-key-pair-is-called.-if-the-public-key-is-provided-upon-resource-creation,-the-provided-public-key-needs-to-be-at-least-2048-bit-and-in-ssh-rsa-format.>"),
			},
		},
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// TODO: use response item
	_ = sSHPublicKeysClientCreateResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/SshPublicKeys_Update_MaximumSet_Gen.json
func ExampleSSHPublicKeysClient_Update() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	sSHPublicKeysClient, err := armcompute.NewSSHPublicKeysClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	sSHPublicKeysClientUpdateResponse, err := sSHPublicKeysClient.Update(ctx,
		"<resource-group-name>",
		"<ssh-public-key-name>",
		armcompute.SSHPublicKeyUpdateResource{
			Tags: map[string]*string{
				"key2854": to.Ptr("a"),
			},
			Properties: &armcompute.SSHPublicKeyResourceProperties{
				PublicKey: to.Ptr("<ssh-public-key-used-to-authenticate-to-a-virtual-machine-through-ssh.-if-this-property-is-not-initially-provided-when-the-resource-is-created,-the-public-key-property-will-be-populated-when-generate-key-pair-is-called.-if-the-public-key-is-provided-upon-resource-creation,-the-provided-public-key-needs-to-be-at-least-2048-bit-and-in-ssh-rsa-format.>"),
			},
		},
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// TODO: use response item
	_ = sSHPublicKeysClientUpdateResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/SshPublicKeys_Delete_MaximumSet_Gen.json
func ExampleSSHPublicKeysClient_Delete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	sSHPublicKeysClient, err := armcompute.NewSSHPublicKeysClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	_, err = sSHPublicKeysClient.Delete(ctx,
		"<resource-group-name>",
		"<ssh-public-key-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/GetAnSshPublicKey.json
func ExampleSSHPublicKeysClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	sSHPublicKeysClient, err := armcompute.NewSSHPublicKeysClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	sSHPublicKeysClientGetResponse, err := sSHPublicKeysClient.Get(ctx,
		"<resource-group-name>",
		"<ssh-public-key-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// TODO: use response item
	_ = sSHPublicKeysClientGetResponse
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/GenerateSshKeyPair.json
func ExampleSSHPublicKeysClient_GenerateKeyPair() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	sSHPublicKeysClient, err := armcompute.NewSSHPublicKeysClient("<subscription-id>", cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	sSHPublicKeysClientGenerateKeyPairResponse, err := sSHPublicKeysClient.GenerateKeyPair(ctx,
		"<resource-group-name>",
		"<ssh-public-key-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// TODO: use response item
	_ = sSHPublicKeysClientGenerateKeyPairResponse
}
