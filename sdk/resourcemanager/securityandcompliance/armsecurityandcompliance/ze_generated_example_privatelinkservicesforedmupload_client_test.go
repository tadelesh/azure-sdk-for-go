//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsecurityandcompliance_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/securityandcompliance/armsecurityandcompliance"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityandcompliance/resource-manager/Microsoft.SecurityAndCompliance/stable/2021-03-08/examples/EdmUploadServiceGet.json
func ExamplePrivateLinkServicesForEDMUploadClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityandcompliance.NewPrivateLinkServicesForEDMUploadClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<resource-name>",
		nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityandcompliance/resource-manager/Microsoft.SecurityAndCompliance/stable/2021-03-08/examples/EdmUploadServiceCreate.json
func ExamplePrivateLinkServicesForEDMUploadClient_BeginCreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityandcompliance.NewPrivateLinkServicesForEDMUploadClient("<subscription-id>", cred, nil)
	poller, err := client.BeginCreateOrUpdate(ctx,
		"<resource-group-name>",
		"<resource-name>",
		armsecurityandcompliance.PrivateLinkServicesForEDMUploadDescription{
			Identity: &armsecurityandcompliance.ServicesResourceIdentity{
				Type: to.Ptr(armsecurityandcompliance.ManagedServiceIdentityTypeSystemAssigned),
			},
			Kind:     to.Ptr(armsecurityandcompliance.KindFhirR4),
			Location: to.Ptr("<location>"),
			Tags:     map[string]*string{},
			Properties: &armsecurityandcompliance.ServicesProperties{
				AccessPolicies: []*armsecurityandcompliance.ServiceAccessPolicyEntry{
					{
						ObjectID: to.Ptr("<object-id>"),
					},
					{
						ObjectID: to.Ptr("<object-id>"),
					}},
				AuthenticationConfiguration: &armsecurityandcompliance.ServiceAuthenticationConfigurationInfo{
					Audience:          to.Ptr("<audience>"),
					Authority:         to.Ptr("<authority>"),
					SmartProxyEnabled: to.Ptr(true),
				},
				CorsConfiguration: &armsecurityandcompliance.ServiceCorsConfigurationInfo{
					AllowCredentials: to.Ptr(false),
					Headers: []*string{
						to.Ptr("*")},
					MaxAge: to.Ptr[int64](1440),
					Methods: []*string{
						to.Ptr("DELETE"),
						to.Ptr("GET"),
						to.Ptr("OPTIONS"),
						to.Ptr("PATCH"),
						to.Ptr("POST"),
						to.Ptr("PUT")},
					Origins: []*string{
						to.Ptr("*")},
				},
				CosmosDbConfiguration: &armsecurityandcompliance.ServiceCosmosDbConfigurationInfo{
					KeyVaultKeyURI:  to.Ptr("<key-vault-key-uri>"),
					OfferThroughput: to.Ptr[int64](1000),
				},
				ExportConfiguration: &armsecurityandcompliance.ServiceExportConfigurationInfo{
					StorageAccountName: to.Ptr("<storage-account-name>"),
				},
				PrivateEndpointConnections: []*armsecurityandcompliance.PrivateEndpointConnection{},
				PublicNetworkAccess:        to.Ptr(armsecurityandcompliance.PublicNetworkAccessDisabled),
			},
		},
		&armsecurityandcompliance.PrivateLinkServicesForEDMUploadClientBeginCreateOrUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	res, err := poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityandcompliance/resource-manager/Microsoft.SecurityAndCompliance/stable/2021-03-08/examples/EdmUploadServicePatch.json
func ExamplePrivateLinkServicesForEDMUploadClient_BeginUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityandcompliance.NewPrivateLinkServicesForEDMUploadClient("<subscription-id>", cred, nil)
	poller, err := client.BeginUpdate(ctx,
		"<resource-group-name>",
		"<resource-name>",
		armsecurityandcompliance.ServicesPatchDescription{
			Tags: map[string]*string{
				"tag1": to.Ptr("value1"),
				"tag2": to.Ptr("value2"),
			},
		},
		&armsecurityandcompliance.PrivateLinkServicesForEDMUploadClientBeginUpdateOptions{ResumeToken: ""})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
		return
	}
	res, err := poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
		return
	}
	// TODO: use response item
	_ = res
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityandcompliance/resource-manager/Microsoft.SecurityAndCompliance/stable/2021-03-08/examples/EdmUploadServiceList.json
func ExamplePrivateLinkServicesForEDMUploadClient_List() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityandcompliance.NewPrivateLinkServicesForEDMUploadClient("<subscription-id>", cred, nil)
	pager := client.List(nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/securityandcompliance/resource-manager/Microsoft.SecurityAndCompliance/stable/2021-03-08/examples/EdmUploadServiceListByResourceGroup.json
func ExamplePrivateLinkServicesForEDMUploadClient_ListByResourceGroup() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
		return
	}

	ctx := context.Background()
	client := armsecurityandcompliance.NewPrivateLinkServicesForEDMUploadClient("<subscription-id>", cred, nil)
	pager := client.ListByResourceGroup("<resource-group-name>",
		nil)
	for pager.More() {
		nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
			return
		}
		for _, v := range nextResult.Value {
			// TODO: use page item
			_ = v
		}
	}
}
