//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armpolicyinsights

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"time"
)

// AttestationsClientCreateOrUpdateAtResourceGroupPollerResponse contains the response from method AttestationsClient.CreateOrUpdateAtResourceGroup.
type AttestationsClientCreateOrUpdateAtResourceGroupPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AttestationsClientCreateOrUpdateAtResourceGroupPoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AttestationsClientCreateOrUpdateAtResourceGroupPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AttestationsClientCreateOrUpdateAtResourceGroupResponse, error) {
	respType := AttestationsClientCreateOrUpdateAtResourceGroupResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.Attestation)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a AttestationsClientCreateOrUpdateAtResourceGroupPollerResponse from the provided client and resume token.
func (l *AttestationsClientCreateOrUpdateAtResourceGroupPollerResponse) Resume(ctx context.Context, client *AttestationsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AttestationsClient.CreateOrUpdateAtResourceGroup", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AttestationsClientCreateOrUpdateAtResourceGroupPoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// AttestationsClientCreateOrUpdateAtResourceGroupResponse contains the response from method AttestationsClient.CreateOrUpdateAtResourceGroup.
type AttestationsClientCreateOrUpdateAtResourceGroupResponse struct {
	Attestation
}

// AttestationsClientCreateOrUpdateAtResourcePollerResponse contains the response from method AttestationsClient.CreateOrUpdateAtResource.
type AttestationsClientCreateOrUpdateAtResourcePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AttestationsClientCreateOrUpdateAtResourcePoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AttestationsClientCreateOrUpdateAtResourcePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AttestationsClientCreateOrUpdateAtResourceResponse, error) {
	respType := AttestationsClientCreateOrUpdateAtResourceResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.Attestation)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a AttestationsClientCreateOrUpdateAtResourcePollerResponse from the provided client and resume token.
func (l *AttestationsClientCreateOrUpdateAtResourcePollerResponse) Resume(ctx context.Context, client *AttestationsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AttestationsClient.CreateOrUpdateAtResource", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AttestationsClientCreateOrUpdateAtResourcePoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// AttestationsClientCreateOrUpdateAtResourceResponse contains the response from method AttestationsClient.CreateOrUpdateAtResource.
type AttestationsClientCreateOrUpdateAtResourceResponse struct {
	Attestation
}

// AttestationsClientCreateOrUpdateAtSubscriptionPollerResponse contains the response from method AttestationsClient.CreateOrUpdateAtSubscription.
type AttestationsClientCreateOrUpdateAtSubscriptionPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AttestationsClientCreateOrUpdateAtSubscriptionPoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AttestationsClientCreateOrUpdateAtSubscriptionPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AttestationsClientCreateOrUpdateAtSubscriptionResponse, error) {
	respType := AttestationsClientCreateOrUpdateAtSubscriptionResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.Attestation)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a AttestationsClientCreateOrUpdateAtSubscriptionPollerResponse from the provided client and resume token.
func (l *AttestationsClientCreateOrUpdateAtSubscriptionPollerResponse) Resume(ctx context.Context, client *AttestationsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AttestationsClient.CreateOrUpdateAtSubscription", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AttestationsClientCreateOrUpdateAtSubscriptionPoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// AttestationsClientCreateOrUpdateAtSubscriptionResponse contains the response from method AttestationsClient.CreateOrUpdateAtSubscription.
type AttestationsClientCreateOrUpdateAtSubscriptionResponse struct {
	Attestation
}

// AttestationsClientDeleteAtResourceGroupResponse contains the response from method AttestationsClient.DeleteAtResourceGroup.
type AttestationsClientDeleteAtResourceGroupResponse struct {
	// placeholder for future response values
}

// AttestationsClientDeleteAtResourceResponse contains the response from method AttestationsClient.DeleteAtResource.
type AttestationsClientDeleteAtResourceResponse struct {
	// placeholder for future response values
}

// AttestationsClientDeleteAtSubscriptionResponse contains the response from method AttestationsClient.DeleteAtSubscription.
type AttestationsClientDeleteAtSubscriptionResponse struct {
	// placeholder for future response values
}

// AttestationsClientGetAtResourceGroupResponse contains the response from method AttestationsClient.GetAtResourceGroup.
type AttestationsClientGetAtResourceGroupResponse struct {
	Attestation
}

// AttestationsClientGetAtResourceResponse contains the response from method AttestationsClient.GetAtResource.
type AttestationsClientGetAtResourceResponse struct {
	Attestation
}

// AttestationsClientGetAtSubscriptionResponse contains the response from method AttestationsClient.GetAtSubscription.
type AttestationsClientGetAtSubscriptionResponse struct {
	Attestation
}

// AttestationsClientListForResourceGroupResponse contains the response from method AttestationsClient.ListForResourceGroup.
type AttestationsClientListForResourceGroupResponse struct {
	AttestationListResult
}

// AttestationsClientListForResourceResponse contains the response from method AttestationsClient.ListForResource.
type AttestationsClientListForResourceResponse struct {
	AttestationListResult
}

// AttestationsClientListForSubscriptionResponse contains the response from method AttestationsClient.ListForSubscription.
type AttestationsClientListForSubscriptionResponse struct {
	AttestationListResult
}

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationsListResults
}

// PolicyEventsClientListQueryResultsForManagementGroupResponse contains the response from method PolicyEventsClient.ListQueryResultsForManagementGroup.
type PolicyEventsClientListQueryResultsForManagementGroupResponse struct {
	PolicyEventsQueryResults
}

// PolicyEventsClientListQueryResultsForPolicyDefinitionResponse contains the response from method PolicyEventsClient.ListQueryResultsForPolicyDefinition.
type PolicyEventsClientListQueryResultsForPolicyDefinitionResponse struct {
	PolicyEventsQueryResults
}

// PolicyEventsClientListQueryResultsForPolicySetDefinitionResponse contains the response from method PolicyEventsClient.ListQueryResultsForPolicySetDefinition.
type PolicyEventsClientListQueryResultsForPolicySetDefinitionResponse struct {
	PolicyEventsQueryResults
}

// PolicyEventsClientListQueryResultsForResourceGroupLevelPolicyAssignmentResponse contains the response from method PolicyEventsClient.ListQueryResultsForResourceGroupLevelPolicyAssignment.
type PolicyEventsClientListQueryResultsForResourceGroupLevelPolicyAssignmentResponse struct {
	PolicyEventsQueryResults
}

// PolicyEventsClientListQueryResultsForResourceGroupResponse contains the response from method PolicyEventsClient.ListQueryResultsForResourceGroup.
type PolicyEventsClientListQueryResultsForResourceGroupResponse struct {
	PolicyEventsQueryResults
}

// PolicyEventsClientListQueryResultsForResourceResponse contains the response from method PolicyEventsClient.ListQueryResultsForResource.
type PolicyEventsClientListQueryResultsForResourceResponse struct {
	PolicyEventsQueryResults
}

// PolicyEventsClientListQueryResultsForSubscriptionLevelPolicyAssignmentResponse contains the response from method PolicyEventsClient.ListQueryResultsForSubscriptionLevelPolicyAssignment.
type PolicyEventsClientListQueryResultsForSubscriptionLevelPolicyAssignmentResponse struct {
	PolicyEventsQueryResults
}

// PolicyEventsClientListQueryResultsForSubscriptionResponse contains the response from method PolicyEventsClient.ListQueryResultsForSubscription.
type PolicyEventsClientListQueryResultsForSubscriptionResponse struct {
	PolicyEventsQueryResults
}

// PolicyMetadataClientGetResourceResponse contains the response from method PolicyMetadataClient.GetResource.
type PolicyMetadataClientGetResourceResponse struct {
	PolicyMetadata
}

// PolicyMetadataClientListResponse contains the response from method PolicyMetadataClient.List.
type PolicyMetadataClientListResponse struct {
	PolicyMetadataCollection
}

// PolicyRestrictionsClientCheckAtResourceGroupScopeResponse contains the response from method PolicyRestrictionsClient.CheckAtResourceGroupScope.
type PolicyRestrictionsClientCheckAtResourceGroupScopeResponse struct {
	CheckRestrictionsResult
}

// PolicyRestrictionsClientCheckAtSubscriptionScopeResponse contains the response from method PolicyRestrictionsClient.CheckAtSubscriptionScope.
type PolicyRestrictionsClientCheckAtSubscriptionScopeResponse struct {
	CheckRestrictionsResult
}

// PolicyStatesClientListQueryResultsForManagementGroupResponse contains the response from method PolicyStatesClient.ListQueryResultsForManagementGroup.
type PolicyStatesClientListQueryResultsForManagementGroupResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientListQueryResultsForPolicyDefinitionResponse contains the response from method PolicyStatesClient.ListQueryResultsForPolicyDefinition.
type PolicyStatesClientListQueryResultsForPolicyDefinitionResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientListQueryResultsForPolicySetDefinitionResponse contains the response from method PolicyStatesClient.ListQueryResultsForPolicySetDefinition.
type PolicyStatesClientListQueryResultsForPolicySetDefinitionResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientListQueryResultsForResourceGroupLevelPolicyAssignmentResponse contains the response from method PolicyStatesClient.ListQueryResultsForResourceGroupLevelPolicyAssignment.
type PolicyStatesClientListQueryResultsForResourceGroupLevelPolicyAssignmentResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientListQueryResultsForResourceGroupResponse contains the response from method PolicyStatesClient.ListQueryResultsForResourceGroup.
type PolicyStatesClientListQueryResultsForResourceGroupResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientListQueryResultsForResourceResponse contains the response from method PolicyStatesClient.ListQueryResultsForResource.
type PolicyStatesClientListQueryResultsForResourceResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientListQueryResultsForSubscriptionLevelPolicyAssignmentResponse contains the response from method PolicyStatesClient.ListQueryResultsForSubscriptionLevelPolicyAssignment.
type PolicyStatesClientListQueryResultsForSubscriptionLevelPolicyAssignmentResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientListQueryResultsForSubscriptionResponse contains the response from method PolicyStatesClient.ListQueryResultsForSubscription.
type PolicyStatesClientListQueryResultsForSubscriptionResponse struct {
	PolicyStatesQueryResults
}

// PolicyStatesClientSummarizeForManagementGroupResponse contains the response from method PolicyStatesClient.SummarizeForManagementGroup.
type PolicyStatesClientSummarizeForManagementGroupResponse struct {
	SummarizeResults
}

// PolicyStatesClientSummarizeForPolicyDefinitionResponse contains the response from method PolicyStatesClient.SummarizeForPolicyDefinition.
type PolicyStatesClientSummarizeForPolicyDefinitionResponse struct {
	SummarizeResults
}

// PolicyStatesClientSummarizeForPolicySetDefinitionResponse contains the response from method PolicyStatesClient.SummarizeForPolicySetDefinition.
type PolicyStatesClientSummarizeForPolicySetDefinitionResponse struct {
	SummarizeResults
}

// PolicyStatesClientSummarizeForResourceGroupLevelPolicyAssignmentResponse contains the response from method PolicyStatesClient.SummarizeForResourceGroupLevelPolicyAssignment.
type PolicyStatesClientSummarizeForResourceGroupLevelPolicyAssignmentResponse struct {
	SummarizeResults
}

// PolicyStatesClientSummarizeForResourceGroupResponse contains the response from method PolicyStatesClient.SummarizeForResourceGroup.
type PolicyStatesClientSummarizeForResourceGroupResponse struct {
	SummarizeResults
}

// PolicyStatesClientSummarizeForResourceResponse contains the response from method PolicyStatesClient.SummarizeForResource.
type PolicyStatesClientSummarizeForResourceResponse struct {
	SummarizeResults
}

// PolicyStatesClientSummarizeForSubscriptionLevelPolicyAssignmentResponse contains the response from method PolicyStatesClient.SummarizeForSubscriptionLevelPolicyAssignment.
type PolicyStatesClientSummarizeForSubscriptionLevelPolicyAssignmentResponse struct {
	SummarizeResults
}

// PolicyStatesClientSummarizeForSubscriptionResponse contains the response from method PolicyStatesClient.SummarizeForSubscription.
type PolicyStatesClientSummarizeForSubscriptionResponse struct {
	SummarizeResults
}

// PolicyStatesClientTriggerResourceGroupEvaluationPollerResponse contains the response from method PolicyStatesClient.TriggerResourceGroupEvaluation.
type PolicyStatesClientTriggerResourceGroupEvaluationPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PolicyStatesClientTriggerResourceGroupEvaluationPoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PolicyStatesClientTriggerResourceGroupEvaluationPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PolicyStatesClientTriggerResourceGroupEvaluationResponse, error) {
	respType := PolicyStatesClientTriggerResourceGroupEvaluationResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a PolicyStatesClientTriggerResourceGroupEvaluationPollerResponse from the provided client and resume
// token.
func (l *PolicyStatesClientTriggerResourceGroupEvaluationPollerResponse) Resume(ctx context.Context, client *PolicyStatesClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PolicyStatesClient.TriggerResourceGroupEvaluation", token, client.pl)
	if err != nil {
		return err
	}
	poller := &PolicyStatesClientTriggerResourceGroupEvaluationPoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// PolicyStatesClientTriggerResourceGroupEvaluationResponse contains the response from method PolicyStatesClient.TriggerResourceGroupEvaluation.
type PolicyStatesClientTriggerResourceGroupEvaluationResponse struct {
	// placeholder for future response values
}

// PolicyStatesClientTriggerSubscriptionEvaluationPollerResponse contains the response from method PolicyStatesClient.TriggerSubscriptionEvaluation.
type PolicyStatesClientTriggerSubscriptionEvaluationPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PolicyStatesClientTriggerSubscriptionEvaluationPoller
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PolicyStatesClientTriggerSubscriptionEvaluationPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PolicyStatesClientTriggerSubscriptionEvaluationResponse, error) {
	respType := PolicyStatesClientTriggerSubscriptionEvaluationResponse{}
	_, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	return respType, nil
}

// Resume rehydrates a PolicyStatesClientTriggerSubscriptionEvaluationPollerResponse from the provided client and resume token.
func (l *PolicyStatesClientTriggerSubscriptionEvaluationPollerResponse) Resume(ctx context.Context, client *PolicyStatesClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PolicyStatesClient.TriggerSubscriptionEvaluation", token, client.pl)
	if err != nil {
		return err
	}
	poller := &PolicyStatesClientTriggerSubscriptionEvaluationPoller{
		pt: pt,
	}
	_, err = poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	return nil
}

// PolicyStatesClientTriggerSubscriptionEvaluationResponse contains the response from method PolicyStatesClient.TriggerSubscriptionEvaluation.
type PolicyStatesClientTriggerSubscriptionEvaluationResponse struct {
	// placeholder for future response values
}

// PolicyTrackedResourcesClientListQueryResultsForManagementGroupResponse contains the response from method PolicyTrackedResourcesClient.ListQueryResultsForManagementGroup.
type PolicyTrackedResourcesClientListQueryResultsForManagementGroupResponse struct {
	PolicyTrackedResourcesQueryResults
}

// PolicyTrackedResourcesClientListQueryResultsForResourceGroupResponse contains the response from method PolicyTrackedResourcesClient.ListQueryResultsForResourceGroup.
type PolicyTrackedResourcesClientListQueryResultsForResourceGroupResponse struct {
	PolicyTrackedResourcesQueryResults
}

// PolicyTrackedResourcesClientListQueryResultsForResourceResponse contains the response from method PolicyTrackedResourcesClient.ListQueryResultsForResource.
type PolicyTrackedResourcesClientListQueryResultsForResourceResponse struct {
	PolicyTrackedResourcesQueryResults
}

// PolicyTrackedResourcesClientListQueryResultsForSubscriptionResponse contains the response from method PolicyTrackedResourcesClient.ListQueryResultsForSubscription.
type PolicyTrackedResourcesClientListQueryResultsForSubscriptionResponse struct {
	PolicyTrackedResourcesQueryResults
}

// RemediationsClientCancelAtManagementGroupResponse contains the response from method RemediationsClient.CancelAtManagementGroup.
type RemediationsClientCancelAtManagementGroupResponse struct {
	Remediation
}

// RemediationsClientCancelAtResourceGroupResponse contains the response from method RemediationsClient.CancelAtResourceGroup.
type RemediationsClientCancelAtResourceGroupResponse struct {
	Remediation
}

// RemediationsClientCancelAtResourceResponse contains the response from method RemediationsClient.CancelAtResource.
type RemediationsClientCancelAtResourceResponse struct {
	Remediation
}

// RemediationsClientCancelAtSubscriptionResponse contains the response from method RemediationsClient.CancelAtSubscription.
type RemediationsClientCancelAtSubscriptionResponse struct {
	Remediation
}

// RemediationsClientCreateOrUpdateAtManagementGroupResponse contains the response from method RemediationsClient.CreateOrUpdateAtManagementGroup.
type RemediationsClientCreateOrUpdateAtManagementGroupResponse struct {
	Remediation
}

// RemediationsClientCreateOrUpdateAtResourceGroupResponse contains the response from method RemediationsClient.CreateOrUpdateAtResourceGroup.
type RemediationsClientCreateOrUpdateAtResourceGroupResponse struct {
	Remediation
}

// RemediationsClientCreateOrUpdateAtResourceResponse contains the response from method RemediationsClient.CreateOrUpdateAtResource.
type RemediationsClientCreateOrUpdateAtResourceResponse struct {
	Remediation
}

// RemediationsClientCreateOrUpdateAtSubscriptionResponse contains the response from method RemediationsClient.CreateOrUpdateAtSubscription.
type RemediationsClientCreateOrUpdateAtSubscriptionResponse struct {
	Remediation
}

// RemediationsClientDeleteAtManagementGroupResponse contains the response from method RemediationsClient.DeleteAtManagementGroup.
type RemediationsClientDeleteAtManagementGroupResponse struct {
	Remediation
}

// RemediationsClientDeleteAtResourceGroupResponse contains the response from method RemediationsClient.DeleteAtResourceGroup.
type RemediationsClientDeleteAtResourceGroupResponse struct {
	Remediation
}

// RemediationsClientDeleteAtResourceResponse contains the response from method RemediationsClient.DeleteAtResource.
type RemediationsClientDeleteAtResourceResponse struct {
	Remediation
}

// RemediationsClientDeleteAtSubscriptionResponse contains the response from method RemediationsClient.DeleteAtSubscription.
type RemediationsClientDeleteAtSubscriptionResponse struct {
	Remediation
}

// RemediationsClientGetAtManagementGroupResponse contains the response from method RemediationsClient.GetAtManagementGroup.
type RemediationsClientGetAtManagementGroupResponse struct {
	Remediation
}

// RemediationsClientGetAtResourceGroupResponse contains the response from method RemediationsClient.GetAtResourceGroup.
type RemediationsClientGetAtResourceGroupResponse struct {
	Remediation
}

// RemediationsClientGetAtResourceResponse contains the response from method RemediationsClient.GetAtResource.
type RemediationsClientGetAtResourceResponse struct {
	Remediation
}

// RemediationsClientGetAtSubscriptionResponse contains the response from method RemediationsClient.GetAtSubscription.
type RemediationsClientGetAtSubscriptionResponse struct {
	Remediation
}

// RemediationsClientListDeploymentsAtManagementGroupResponse contains the response from method RemediationsClient.ListDeploymentsAtManagementGroup.
type RemediationsClientListDeploymentsAtManagementGroupResponse struct {
	RemediationDeploymentsListResult
}

// RemediationsClientListDeploymentsAtResourceGroupResponse contains the response from method RemediationsClient.ListDeploymentsAtResourceGroup.
type RemediationsClientListDeploymentsAtResourceGroupResponse struct {
	RemediationDeploymentsListResult
}

// RemediationsClientListDeploymentsAtResourceResponse contains the response from method RemediationsClient.ListDeploymentsAtResource.
type RemediationsClientListDeploymentsAtResourceResponse struct {
	RemediationDeploymentsListResult
}

// RemediationsClientListDeploymentsAtSubscriptionResponse contains the response from method RemediationsClient.ListDeploymentsAtSubscription.
type RemediationsClientListDeploymentsAtSubscriptionResponse struct {
	RemediationDeploymentsListResult
}

// RemediationsClientListForManagementGroupResponse contains the response from method RemediationsClient.ListForManagementGroup.
type RemediationsClientListForManagementGroupResponse struct {
	RemediationListResult
}

// RemediationsClientListForResourceGroupResponse contains the response from method RemediationsClient.ListForResourceGroup.
type RemediationsClientListForResourceGroupResponse struct {
	RemediationListResult
}

// RemediationsClientListForResourceResponse contains the response from method RemediationsClient.ListForResource.
type RemediationsClientListForResourceResponse struct {
	RemediationListResult
}

// RemediationsClientListForSubscriptionResponse contains the response from method RemediationsClient.ListForSubscription.
type RemediationsClientListForSubscriptionResponse struct {
	RemediationListResult
}
