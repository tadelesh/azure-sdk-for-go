//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armEnterpriseKnowledgeGraph

const (
	moduleName    = "armEnterpriseKnowledgeGraph"
	moduleVersion = "v0.2.0"
)

// EnterpriseKnowledgeGraphPropertiesProvisioningState - The state of EnterpriseKnowledgeGraph provisioning
type EnterpriseKnowledgeGraphPropertiesProvisioningState string

const (
	EnterpriseKnowledgeGraphPropertiesProvisioningStateCreating  EnterpriseKnowledgeGraphPropertiesProvisioningState = "Creating"
	EnterpriseKnowledgeGraphPropertiesProvisioningStateDeleting  EnterpriseKnowledgeGraphPropertiesProvisioningState = "Deleting"
	EnterpriseKnowledgeGraphPropertiesProvisioningStateFailed    EnterpriseKnowledgeGraphPropertiesProvisioningState = "Failed"
	EnterpriseKnowledgeGraphPropertiesProvisioningStateSucceeded EnterpriseKnowledgeGraphPropertiesProvisioningState = "Succeeded"
)

// PossibleEnterpriseKnowledgeGraphPropertiesProvisioningStateValues returns the possible values for the EnterpriseKnowledgeGraphPropertiesProvisioningState const type.
func PossibleEnterpriseKnowledgeGraphPropertiesProvisioningStateValues() []EnterpriseKnowledgeGraphPropertiesProvisioningState {
	return []EnterpriseKnowledgeGraphPropertiesProvisioningState{
		EnterpriseKnowledgeGraphPropertiesProvisioningStateCreating,
		EnterpriseKnowledgeGraphPropertiesProvisioningStateDeleting,
		EnterpriseKnowledgeGraphPropertiesProvisioningStateFailed,
		EnterpriseKnowledgeGraphPropertiesProvisioningStateSucceeded,
	}
}

// ToPtr returns a *EnterpriseKnowledgeGraphPropertiesProvisioningState pointing to the current value.
func (c EnterpriseKnowledgeGraphPropertiesProvisioningState) ToPtr() *EnterpriseKnowledgeGraphPropertiesProvisioningState {
	return &c
}

// SKUName - The name of SKU.
type SKUName string

const (
	SKUNameF0 SKUName = "F0"
	SKUNameS1 SKUName = "S1"
)

// PossibleSKUNameValues returns the possible values for the SKUName const type.
func PossibleSKUNameValues() []SKUName {
	return []SKUName{
		SKUNameF0,
		SKUNameS1,
	}
}

// ToPtr returns a *SKUName pointing to the current value.
func (c SKUName) ToPtr() *SKUName {
	return &c
}
